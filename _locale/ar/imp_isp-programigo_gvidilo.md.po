# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-11-09 20:23+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ar\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: lang
#: imp_isp-programigo_gvidilo.md:1
#, no-wrap
msgid "eo"
msgstr "ar"

#. type: YAML Front Matter: lang-niv
#: imp_isp-programigo_gvidilo.md:1
#, no-wrap
msgid "auto"
msgstr "auto"

#. type: YAML Front Matter: lang-ref
#: imp_isp-programigo_gvidilo.md:1
#, no-wrap
msgid "052-ISP-programigo_gvidilo"
msgstr "052-ISP-programigo_gvidilo"

#. type: YAML Front Matter: layout
#: imp_isp-programigo_gvidilo.md:1
#, no-wrap
msgid "page"
msgstr "page"

#. type: YAML Front Matter: title
#: imp_isp-programigo_gvidilo.md:1
#, fuzzy, no-wrap
msgid "Video Programado Guide"
msgstr "دليل برمجة الفيديو"

#. type: Title #
#: imp_isp-programigo_gvidilo.md:9
#, fuzzy, no-wrap
msgid "_IMP\\_ISP_  \\( vidu  _imp\\_isp.h\\_)"
msgstr "_IMP\\_ISP_   \\( انظر   _imp\\_isp.h\\_)"

#. type: Plain text
#: imp_isp-programigo_gvidilo.md:11
#, fuzzy, no-wrap
msgid "Bildosigna prilaborado. Ĉefe inkluzivas agordojn de bildaj efikoj, reĝimoŝaltilo kaj registrado, aldono kaj forigo de sensilo.\n"
msgstr "معالجة الصورة. يتضمن بشكل أساسي إعدادات تأثيرات الصورة ومفتاح الوضع والتسجيل وإضافة وإزالة المستشعر.\n"

#. type: Plain text
#: imp_isp-programigo_gvidilo.md:13
#, fuzzy, no-wrap
msgid "La ISP-modulo havas nenion komunan kun datuma fluo kaj ne bezonas esti ligita, ĝi nur funkcias laŭ efektagordo kaj sensila kontrolo.\n"
msgstr "لا علاقة لوحدة ISP بتدفق البيانات ولا تحتاج إلى الاتصال ، فهي تعمل فقط من حيث تكوين التأثير والتحكم في المستشعر.\n"

#. type: Title ##
#: imp_isp-programigo_gvidilo.md:14
#, fuzzy, no-wrap
msgid "Aktivigo"
msgstr "التنشيط"

#. type: Plain text
#: imp_isp-programigo_gvidilo.md:18
#, fuzzy, no-wrap
msgid ""
"La paŝoj de aktivigo de ISP-modulo estas jenaj:\n"
"* paŝo 1: Kreu ISP-modulon\n"
msgstr ""
"خطوات تنشيط وحدة ISP هي كما يلي:\n"
"* الخطوة 1: إنشاء وحدة ISP\n"

#. type: Fenced code block
#: imp_isp-programigo_gvidilo.md:19
#, no-wrap
msgid ""
"int ret = 0;\n"
"  // étape 1 : \n"
"  ret = IMP_ISP_Open (); \n"
"  if (ret <0) {\n"
"    printf (\"Échec de ISPInit\\n\");\n"
"    return -1;\n"
"  }\n"
msgstr ""
"int ret = 0;\n"
"  // étape 1 : \n"
"  ret = IMP_ISP_Open (); \n"
"  if (ret <0) {\n"
"    printf (\"Échec de ISPInit\\n\");\n"
"    return -1;\n"
"  }\n"

#. type: Bullet: '* '
#: imp_isp-programigo_gvidilo.md:29
#, fuzzy, no-wrap
msgid "2a paŝo: Aldonu sensilon, la sensila pelilo estis aldonita al la kerno antaŭ ĉi tiu operacio.\n"
msgstr "الخطوة 2: إضافة جهاز استشعار ، تمت إضافة برنامج تشغيل المستشعر إلى النواة قبل هذه العملية.\n"

#. type: Fenced code block
#: imp_isp-programigo_gvidilo.md:31
#, no-wrap
msgid ""
"  IMPSensorInfo sensor[2];\n"
"  sensor[0].name = \"xxx\";\n"
"  sensor[0].cbus_type = SENSOR_CONTROL_INTERFACE_I2C; // OU SENSOR_CONTROL_INTERFACE_SPI\n"
"  sensor[0].i2c = {\n"
"    .type = \"xxx\", // nom du périphérique I2C, qui doit être cohérent avec le nom de la structure i2c_device_id dans le pilote du capteur.\n"
"    .addr = xx, // adresse I2C\n"
"    .i2c_adapter_id = xx, // ID du contrôleur I2C où se trouve le capteur\n"
"  }\n"
"  /* OU\n"
"   * sensor[0].spi = {\n"
"   *   .modalias = \"xx\", // nom du périphérique SPI, doit être cohérent avec le nom de la structure spi_device_id dans le pilote du capteur.\n"
"   *     .bus_num = xx, // adresse du bus SPI\n"
"   *}\n"
"   */\n"
"  sensor[1].name[0]=0; // pas d'autre capteur\n"
"  ret = IMP_ISP_AddSensor (& sensor); \n"
"  if (ret <0) {\n"
"    printf (\"Impossible d'enregistrer le capteur \\n\");\n"
"    return -1;\n"
"  }\n"
msgstr ""
"  IMPSensorInfo sensor[2];\n"
"  sensor[0].name = \"xxx\";\n"
"  sensor[0].cbus_type = SENSOR_CONTROL_INTERFACE_I2C; // OU SENSOR_CONTROL_INTERFACE_SPI\n"
"  sensor[0].i2c = {\n"
"    .type = \"xxx\", // nom du périphérique I2C, qui doit être cohérent avec le nom de la structure i2c_device_id dans le pilote du capteur.\n"
"    .addr = xx, // adresse I2C\n"
"    .i2c_adapter_id = xx, // ID du contrôleur I2C où se trouve le capteur\n"
"  }\n"
"  /* OU\n"
"   * sensor[0].spi = {\n"
"   *   .modalias = \"xx\", // nom du périphérique SPI, doit être cohérent avec le nom de la structure spi_device_id dans le pilote du capteur.\n"
"   *     .bus_num = xx, // adresse du bus SPI\n"
"   *}\n"
"   */\n"
"  sensor[1].name[0]=0; // pas d'autre capteur\n"
"  ret = IMP_ISP_AddSensor (& sensor); \n"
"  if (ret <0) {\n"
"    printf (\"Impossible d'enregistrer le capteur \\n\");\n"
"    return -1;\n"
"  }\n"

#. type: Bullet: '* '
#: imp_isp-programigo_gvidilo.md:54
#, fuzzy, no-wrap
msgid "paŝo 3: Aktivigu la sensilon, ĝi komencos produkti bildojn.\n"
msgstr "الخطوة 3: تنشيط المستشعر، وسوف يبدأ في إنتاج الصور. \n"

#. type: Fenced code block
#: imp_isp-programigo_gvidilo.md:56
#, no-wrap
msgid ""
"  ret = IMP_ISP_EnableSensor (void);\n"
"  if (ret <0) {\n"
"  printf (\"Impossible d'activer le capteur \\n\");\n"
"  return -1;\n"
" }\n"
msgstr ""
"  ret = IMP_ISP_EnableSensor (void);\n"
"  if (ret <0) {\n"
"  printf (\"Impossible d'activer le capteur \\n\");\n"
"  return -1;\n"
" }\n"

#. type: Bullet: '* '
#: imp_isp-programigo_gvidilo.md:64
#, fuzzy, no-wrap
msgid "paŝo 4: Aktivigu la agordojn:\n"
msgstr "الخطوة 4: تنشيط الإعدادات:\n"

#. type: Fenced code block
#: imp_isp-programigo_gvidilo.md:66
#, no-wrap
msgid ""
"  ret = IMP_ISP_EnableTuning (); \n"
"  if (ret <0) {\n"
"  printf (\"Impossible d'activer le réglage \\n\");\n"
"  return -1;\n"
" }\n"
msgstr ""
"  ret = IMP_ISP_EnableTuning (); \n"
"  if (ret <0) {\n"
"  printf (\"Impossible d'activer le réglage \\n\");\n"
"  return -1;\n"
" }\n"

#. type: Bullet: '* '
#: imp_isp-programigo_gvidilo.md:74
#, fuzzy, no-wrap
msgid "paŝo 5: Alvoki ISP-elpurigan interfacon: Bonvolu raporti al la dokumentado de ISP-elpuriga interfaco.\n"
msgstr "الخطوة 5: استدعاء واجهة تصحيح أخطاء ISP: يرجى الرجوع إلى وثائق واجهة تصحيح أخطاء مزود خدمة الإنترنت. \n"

#. type: Title ##
#: imp_isp-programigo_gvidilo.md:77
#, fuzzy, no-wrap
msgid "senaktivigo de ISP-modulo"
msgstr "وحدة ISP إلغاء تنشيط"

#. type: Plain text
#: imp_isp-programigo_gvidilo.md:81
#, fuzzy, no-wrap
msgid ""
"La paŝoj por malinstali la ISP-modulon estas jenaj:\n"
"* paŝo 1: Malŝalti la ISP-agordon\n"
msgstr ""
"خطوات إلغاء تثبيت وحدة ISP كما يلي:\n"
"* الخطوة 1: تعطيل تكوين ISP\n"

#. type: Fenced code block
#: imp_isp-programigo_gvidilo.md:82
#, no-wrap
msgid ""
"int ret = 0;\n"
"  IMPSensorInfo sensor[2];\n"
"  sensor[0].name = \"xxx\";\n"
"  sensor[1].name[0] = 0;\n"
"  ret = IMP_ISP_DisableTuning ();\n"
"  if (ret <0) {\n"
"  printf (\"Impossible de désactiver le réglage \\n\");\n"
"  return -1;\n"
" }\n"
msgstr ""
"int ret = 0;\n"
"  IMPSensorInfo sensor[2];\n"
"  sensor[0].name = \"xxx\";\n"
"  sensor[1].name[0] = 0;\n"
"  ret = IMP_ISP_DisableTuning ();\n"
"  if (ret <0) {\n"
"  printf (\"Impossible de désactiver le réglage \\n\");\n"
"  return -1;\n"
" }\n"

#. type: Bullet: '* '
#: imp_isp-programigo_gvidilo.md:94
#, fuzzy, no-wrap
msgid "Paŝo 2: Fermu la sensilojn.  \\( kadroj devas esti fermita antaŭ ĉi tiu operacio \\) \n"
msgstr "الخطوة 2: أغلق المجسات. يجب إغلاق الإطارات   \\( قبل هذه العملية  \\)  \n"

#. type: Fenced code block
#: imp_isp-programigo_gvidilo.md:96
#, no-wrap
msgid ""
"ret = IMP_ISP_DisableSensor (); \n"
"  if (ret <0) {\n"
"  printf (\"Impossible de désactiver le capteur \\n\");\n"
"  return -1;\n"
" }\n"
msgstr ""
"ret = IMP_ISP_DisableSensor (); \n"
"  if (ret <0) {\n"
"  printf (\"Impossible de désactiver le capteur \\n\");\n"
"  return -1;\n"
" }\n"

#. type: Bullet: '* '
#: imp_isp-programigo_gvidilo.md:105
#, fuzzy, no-wrap
msgid "3a paŝo: forigu la sensilojn, la sensiloj devas esti fermitaj antaŭ ĉi tiu operacio.\n"
msgstr "الخطوة الثالثة: قم بإزالة المستشعرات ، يجب إغلاق المستشعرات قبل هذه العملية.\n"

#. type: Fenced code block
#: imp_isp-programigo_gvidilo.md:107
#, no-wrap
msgid ""
"ret = IMP_ISP_DelSensor (& sensor); \n"
"  if (ret <0) {\n"
"  printf (\"Impossible de désactiver le capteur \\n\");\n"
"  return -1;\n"
" }\n"
msgstr ""
"ret = IMP_ISP_DelSensor (& sensor); \n"
"  if (ret <0) {\n"
"  printf (\"Impossible de désactiver le capteur \\n\");\n"
"  return -1;\n"
" }\n"

#. type: Bullet: '* '
#: imp_isp-programigo_gvidilo.md:115
#, fuzzy, no-wrap
msgid "paŝo 4: Purigu la ISP-modulon, ĉiuj sensiloj devas esti forigitaj antaŭ ĉi tiu operacio.\n"
msgstr "الخطوة 4: تنظيف وحدة ISP، يجب إزالة جميع أجهزة الاستشعار قبل هذه العملية. \n"

#. type: Fenced code block
#: imp_isp-programigo_gvidilo.md:117
#, no-wrap
msgid ""
"ret = IMP_ISP_Close ();\n"
"  if (ret <0) {\n"
"  printf (\"Impossible de désactiver le capteur \\n\");\n"
"  return -1;\n"
" }\n"
msgstr ""
"ret = IMP_ISP_Close ();\n"
"  if (ret <0) {\n"
"  printf (\"Impossible de désactiver le capteur \\n\");\n"
"  return -1;\n"
" }\n"

#. type: Title ##
#: imp_isp-programigo_gvidilo.md:127
#, fuzzy, no-wrap
msgid "listo de funkcioj"
msgstr "قائمة الوظائف"

#. type: Fenced code block
#: imp_isp-programigo_gvidilo.md:129
#, no-wrap
msgid ""
"int IMP_ISP_Open(void);\n"
"int IMP_ISP_Close(void);\n"
"int IMP_ISP_AddSensor(IMPSensorInfo *pinfo);\n"
"int IMP_ISP_DelSensor(IMPSensorInfo *pinfo);\n"
"int IMP_ISP_EnableSensor(void);\n"
"int IMP_ISP_DisableSensor(void);\n"
"int IMP_ISP_SetSensorRegister(uint32_t reg, uint32_t value);\n"
"int IMP_ISP_GetSensorRegister(uint32_t reg, uint32_t *value);\n"
"int IMP_ISP_EnableTuning(void);\n"
"int IMP_ISP_DisableTuning(void);\n"
"int IMP_ISP_Tuning_SetSensorFPS(uint32_t fps_num, uint32_t fps_den);\n"
"int IMP_ISP_Tuning_GetSensorFPS(uint32_t *fps_num, uint32_t *fps_den);\n"
"int IMP_ISP_Tuning_SetAntiFlickerAttr(IMPISPAntiflickerAttr attr);\n"
"int IMP_ISP_Tuning_GetAntiFlickerAttr(IMPISPAntiflickerAttr *pattr);\n"
"int IMP_ISP_Tuning_SetRawDRC(IMPISPDrcAttr *pinfo);\n"
"int IMP_ISP_Tuning_GetRawDRC(IMPISPDrcAttr *pinfo);\n"
"int IMP_ISP_Tuning_SetSinterDnsAttr(IMPISPSinterDenoiseAttr *pinfo);\n"
"int IMP_ISP_Tuning_GetSinterDnsAttr(IMPISPSinterDenoiseAttr *pinfo);\n"
"int IMP_ISP_Tuning_SetTemperDnsCtl(IMPISPTemperDenoiseAttr *pinfo);\n"
"int IMP_ISP_Tuning_SetTemperDnsAttr(IMPISPTemperDenoiseAttr *pinfo);\n"
"int IMP_ISP_Tuning_GetTemperDnsAttr(IMPISPTemperDenoiseAttr *pinfo);\n"
"int IMP_ISP_Tuning_SetWDRAttr(IMPISPTuningOpsMode mode);\n"
"int IMP_ISP_Tuning_GetWDRAttr(IMPISPTuningOpsMode *pmode);\n"
"int IMP_ISP_Tuning_SetSceneMode(IMPISPSceneMode mode);\n"
"int IMP_ISP_Tuning_GetSceneMode(IMPISPSceneMode *pmode);\n"
"int IMP_ISP_Tuning_SetColorfxMode(IMPISPColorfxMode mode);\n"
"int IMP_ISP_Tuning_GetColorfxMode(IMPISPColorfxMode *pmode);\n"
"int IMP_ISP_Tuning_SetBrightness(unsigned char bright);\n"
"int IMP_ISP_Tuning_GetBrightness(unsigned char *pbright);\n"
"int IMP_ISP_Tuning_SetContrast(unsigned char contrast);\n"
"int IMP_ISP_Tuning_GetContrast(unsigned char *pcontrast);\n"
"int IMP_ISP_Tuning_SetSharpness(unsigned char sharpness);\n"
"int IMP_ISP_Tuning_GetSharpness(unsigned char *psharpness);\n"
"int IMP_ISP_Tuning_SetSaturation(unsigned char sat);\n"
"int IMP_ISP_Tuning_GetSaturation(unsigned char *psat);\n"
"int IMP_ISP_Tuning_SetISPProcess(IMPISPTuningOpsMode mode);\n"
"int IMP_ISP_Tuning_SetFWFreeze(IMPISPTuningOpsMode mode);\n"
"int IMP_ISP_Tuning_SaveAllParam(char *path);\n"
"int IMP_ISP_Tuning_SetISPBypass(IMPISPTuningOpsMode enable);\n"
"int IMP_ISP_Tuning_GetTotalGain(uint32_t *gain);\n"
"int IMP_ISP_Tuning_SetISPHflip(IMPISPTuningOpsMode mode);\n"
"int IMP_ISP_Tuning_GetISPHflip(IMPISPTuningOpsMode *pmode);\n"
"int IMP_ISP_Tuning_SetISPVflip(IMPISPTuningOpsMode mode);\n"
"int IMP_ISP_Tuning_GetISPVflip(IMPISPTuningOpsMode *pmode);\n"
"int IMP_ISP_Tuning_SetISPRunningMode(IMPISPRunningMode mode);\n"
"int IMP_ISP_Tuning_GetISPRunningMode(IMPISPRunningMode *pmode);\n"
"int IMP_ISP_Tuning_SetAeStrategy(IMPISPAeStrategy strategy);\n"
"int IMP_ISP_Tuning_GetAeStrategy(IMPISPAeStrategy *pstrategy);\n"
"int IMP_ISP_Tuning_SetGamma(IMPISPGamma *gamma);\n"
"int IMP_ISP_Tuning_GetGamma(IMPISPGamma *gamma);\n"
"int IMP_ISP_Tuning_SetAeComp(int comp);\n"
"int IMP_ISP_Tuning_GetAeComp(int *comp);\n"
"int IMP_ISP_Tuning_SetExpr(IMPISPExpr *expr);\n"
"int IMP_ISP_Tuning_GetExpr(IMPISPExpr *expr);\n"
"int IMP_ISP_Tuning_AE_GetROI(IMPISPAERoi *isp_ae_roi);\n"
"int IMP_ISP_Tuning_AE_SetROI(IMPISPAERoi *isp_ae_roi);\n"
"int IMP_ISP_Tuning_SetWB(IMPISPWB *wb);\n"
"int IMP_ISP_Tuning_GetWB(IMPISPWB *wb);\n"
"int IMP_ISP_Tuning_GetWB_Statis(IMPISPWB *wb);\n"
"int IMP_ISP_Tuning_Awb_GetCwfShift(IMPISPWB *isp_wb_attr);\n"
"int IMP_ISP_Tuning_Awb_SetCwfShift(IMPISPWB *isp_wb_attr);\n"
"int IMP_ISP_Tuning_SetMaxAgain(uint32_t gain);\n"
"int IMP_ISP_Tuning_GetMaxAgain(uint32_t *gain);\n"
"int IMP_ISP_Tuning_SetMaxDgain(uint32_t gain);\n"
"int IMP_ISP_Tuning_GetMaxDgain(uint32_t *gain);\n"
"int IMP_ISP_Tuning_SetVideoDrop(void (*cb)(void));\n"
"int IMP_ISP_Tuning_SetHiLightDepress(uint32_t strength);\n"
"int IMP_ISP_Tuning_SetTemperStrength(uint32_t ratio);\n"
"int IMP_ISP_Tuning_SetSinterStrength(uint32_t ratio);\n"
"int IMP_ISP_Tuning_SetDPStrength(uint32_t ratio);\n"
"int IMP_ISP_Tuning_SetAntiFogAttr(IMPISPAntiFogAttr attr);\n"
"int IMP_ISP_Tuning_GetEVAttr(IMPISPEVAttr *attr);\n"
msgstr ""
"int IMP_ISP_Open(void);\n"
"int IMP_ISP_Close(void);\n"
"int IMP_ISP_AddSensor(IMPSensorInfo *pinfo);\n"
"int IMP_ISP_DelSensor(IMPSensorInfo *pinfo);\n"
"int IMP_ISP_EnableSensor(void);\n"
"int IMP_ISP_DisableSensor(void);\n"
"int IMP_ISP_SetSensorRegister(uint32_t reg, uint32_t value);\n"
"int IMP_ISP_GetSensorRegister(uint32_t reg, uint32_t *value);\n"
"int IMP_ISP_EnableTuning(void);\n"
"int IMP_ISP_DisableTuning(void);\n"
"int IMP_ISP_Tuning_SetSensorFPS(uint32_t fps_num, uint32_t fps_den);\n"
"int IMP_ISP_Tuning_GetSensorFPS(uint32_t *fps_num, uint32_t *fps_den);\n"
"int IMP_ISP_Tuning_SetAntiFlickerAttr(IMPISPAntiflickerAttr attr);\n"
"int IMP_ISP_Tuning_GetAntiFlickerAttr(IMPISPAntiflickerAttr *pattr);\n"
"int IMP_ISP_Tuning_SetRawDRC(IMPISPDrcAttr *pinfo);\n"
"int IMP_ISP_Tuning_GetRawDRC(IMPISPDrcAttr *pinfo);\n"
"int IMP_ISP_Tuning_SetSinterDnsAttr(IMPISPSinterDenoiseAttr *pinfo);\n"
"int IMP_ISP_Tuning_GetSinterDnsAttr(IMPISPSinterDenoiseAttr *pinfo);\n"
"int IMP_ISP_Tuning_SetTemperDnsCtl(IMPISPTemperDenoiseAttr *pinfo);\n"
"int IMP_ISP_Tuning_SetTemperDnsAttr(IMPISPTemperDenoiseAttr *pinfo);\n"
"int IMP_ISP_Tuning_GetTemperDnsAttr(IMPISPTemperDenoiseAttr *pinfo);\n"
"int IMP_ISP_Tuning_SetWDRAttr(IMPISPTuningOpsMode mode);\n"
"int IMP_ISP_Tuning_GetWDRAttr(IMPISPTuningOpsMode *pmode);\n"
"int IMP_ISP_Tuning_SetSceneMode(IMPISPSceneMode mode);\n"
"int IMP_ISP_Tuning_GetSceneMode(IMPISPSceneMode *pmode);\n"
"int IMP_ISP_Tuning_SetColorfxMode(IMPISPColorfxMode mode);\n"
"int IMP_ISP_Tuning_GetColorfxMode(IMPISPColorfxMode *pmode);\n"
"int IMP_ISP_Tuning_SetBrightness(unsigned char bright);\n"
"int IMP_ISP_Tuning_GetBrightness(unsigned char *pbright);\n"
"int IMP_ISP_Tuning_SetContrast(unsigned char contrast);\n"
"int IMP_ISP_Tuning_GetContrast(unsigned char *pcontrast);\n"
"int IMP_ISP_Tuning_SetSharpness(unsigned char sharpness);\n"
"int IMP_ISP_Tuning_GetSharpness(unsigned char *psharpness);\n"
"int IMP_ISP_Tuning_SetSaturation(unsigned char sat);\n"
"int IMP_ISP_Tuning_GetSaturation(unsigned char *psat);\n"
"int IMP_ISP_Tuning_SetISPProcess(IMPISPTuningOpsMode mode);\n"
"int IMP_ISP_Tuning_SetFWFreeze(IMPISPTuningOpsMode mode);\n"
"int IMP_ISP_Tuning_SaveAllParam(char *path);\n"
"int IMP_ISP_Tuning_SetISPBypass(IMPISPTuningOpsMode enable);\n"
"int IMP_ISP_Tuning_GetTotalGain(uint32_t *gain);\n"
"int IMP_ISP_Tuning_SetISPHflip(IMPISPTuningOpsMode mode);\n"
"int IMP_ISP_Tuning_GetISPHflip(IMPISPTuningOpsMode *pmode);\n"
"int IMP_ISP_Tuning_SetISPVflip(IMPISPTuningOpsMode mode);\n"
"int IMP_ISP_Tuning_GetISPVflip(IMPISPTuningOpsMode *pmode);\n"
"int IMP_ISP_Tuning_SetISPRunningMode(IMPISPRunningMode mode);\n"
"int IMP_ISP_Tuning_GetISPRunningMode(IMPISPRunningMode *pmode);\n"
"int IMP_ISP_Tuning_SetAeStrategy(IMPISPAeStrategy strategy);\n"
"int IMP_ISP_Tuning_GetAeStrategy(IMPISPAeStrategy *pstrategy);\n"
"int IMP_ISP_Tuning_SetGamma(IMPISPGamma *gamma);\n"
"int IMP_ISP_Tuning_GetGamma(IMPISPGamma *gamma);\n"
"int IMP_ISP_Tuning_SetAeComp(int comp);\n"
"int IMP_ISP_Tuning_GetAeComp(int *comp);\n"
"int IMP_ISP_Tuning_SetExpr(IMPISPExpr *expr);\n"
"int IMP_ISP_Tuning_GetExpr(IMPISPExpr *expr);\n"
"int IMP_ISP_Tuning_AE_GetROI(IMPISPAERoi *isp_ae_roi);\n"
"int IMP_ISP_Tuning_AE_SetROI(IMPISPAERoi *isp_ae_roi);\n"
"int IMP_ISP_Tuning_SetWB(IMPISPWB *wb);\n"
"int IMP_ISP_Tuning_GetWB(IMPISPWB *wb);\n"
"int IMP_ISP_Tuning_GetWB_Statis(IMPISPWB *wb);\n"
"int IMP_ISP_Tuning_Awb_GetCwfShift(IMPISPWB *isp_wb_attr);\n"
"int IMP_ISP_Tuning_Awb_SetCwfShift(IMPISPWB *isp_wb_attr);\n"
"int IMP_ISP_Tuning_SetMaxAgain(uint32_t gain);\n"
"int IMP_ISP_Tuning_GetMaxAgain(uint32_t *gain);\n"
"int IMP_ISP_Tuning_SetMaxDgain(uint32_t gain);\n"
"int IMP_ISP_Tuning_GetMaxDgain(uint32_t *gain);\n"
"int IMP_ISP_Tuning_SetVideoDrop(void (*cb)(void));\n"
"int IMP_ISP_Tuning_SetHiLightDepress(uint32_t strength);\n"
"int IMP_ISP_Tuning_SetTemperStrength(uint32_t ratio);\n"
"int IMP_ISP_Tuning_SetSinterStrength(uint32_t ratio);\n"
"int IMP_ISP_Tuning_SetDPStrength(uint32_t ratio);\n"
"int IMP_ISP_Tuning_SetAntiFogAttr(IMPISPAntiFogAttr attr);\n"
"int IMP_ISP_Tuning_GetEVAttr(IMPISPEVAttr *attr);\n"

#, fuzzy, no-wrap
#~ msgid "Gvidilo pri video-programado"
#~ msgstr "دليل برمجة الفيديو"

#, fuzzy, no-wrap
#~ msgid "IMP_ISP (voir imp_isp.h)"
#~ msgstr "IMP_ISP (voir imp_isp.h)"

#, fuzzy, no-wrap
#~ msgid "Paŝo 3: Aktivigu la sensilon, ĝi komencos produkti bildojn.\n"
#~ msgstr "الخطوة 3: قم بتنشيط المستشعر ، وسيبدأ في إنتاج الصور.\n"

#, fuzzy, no-wrap
#~ msgid "Paŝo 5: Alvoki ISP-elpurigan interfacon: Bonvolu raporti al la dokumentado de ISP-elpuriga interfaco.\n"
#~ msgstr "الخطوة 5: استدعاء واجهة تصحيح أخطاء ISP: يرجى الرجوع إلى وثائق واجهة تصحيح أخطاء ISP.\n"

#, fuzzy, no-wrap
#~ msgid "Senaktivigo de ISP-modulo"
#~ msgstr "تعطيل وحدة ISP"

#, fuzzy, no-wrap
#~ msgid "2a paŝo: fermu la sensilojn. (FrameSource devas esti fermita antaŭ ĉi tiu operacio)\n"
#~ msgstr "الخطوة الثانية: أغلق المستشعرات. (يجب إغلاق مصدر الإطار قبل هذه العملية)\n"

#, fuzzy, no-wrap
#~ msgid "Paŝo 4: Purigu la ISP-modulon, ĉiuj sensiloj devas esti forigitaj antaŭ ĉi tiu operacio.\n"
#~ msgstr "الخطوة 4: قم بتنظيف وحدة ISP ، يجب إزالة جميع أجهزة الاستشعار قبل هذه العملية.\n"

#, fuzzy
#~ msgid "int Pim _ISP_ Malfermu ( dezerta ); \n"
#~ msgstr "Int Pim  _ISP_  Open  (  الصحراء  )؛  \n"

#, fuzzy, no-wrap
#~ msgid ""
#~ "int IMP_ISP_Malferma(malplena);\n"
#~ "int IMP_ISP_Fermi(malplenan);\n"
#~ "int IMP_ISP_AddSensor(IMPSensorInfo *pinfo);\n"
#~ "int IMP_ISP_DelSensor(IMPSensorInfo *pinfo);\n"
#~ "int IMP_ISP_EnableSensor(malplena);\n"
#~ "int IMP_ISP_DisableSensor(malplena);\n"
#~ "int IMP_ISP_SetSensorRegister(uint32_t reg, uint32_t valoro);\n"
#~ "int IMP_ISP_GetSensorRegister(uint32_t reg, uint32_t *valoro);\n"
#~ "int IMP_ISP_EnableTuning(malplena);\n"
#~ "int IMP_ISP_DisableTuning(malplena);\n"
#~ "int IMP_ISP_Agordo_SetSensorFPS(uint32_t fps_num, uint32_t fps_den);\n"
#~ "int IMP_ISP_Tuning_GetSensorFPS(uint32_t *fps_num, uint32_t *fps_den);\n"
#~ "int IMP_ISP_Agordo_SetAntiFlickerAttr(IMPISPAntiflickerAttr attr);\n"
#~ "int IMP_ISP_Tuning_GetAntiFlickerAttr(IMPISPAntiflickerAttr *pattr);\n"
#~ "int IMP_ISP_Agordo_SetRawDRC(IMPISPDrcAttr *pinfo);\n"
#~ "int IMP_ISP_Tuning_GetRawDRC(IMPISPDrcAttr *pinfo);\n"
#~ "int IMP_ISP_Agordo_SetSinterDnsAttr(IMPISPSinterDenoiseAttr *pinfo);\n"
#~ "int IMP_ISP_Tuning_GetSinterDnsAttr(IMPISPSinterDenoiseAttr *pinfo);\n"
#~ "int IMP_ISP_Agordo_SetTemperDnsCtl(IMPISPTemperDenoiseAttr *pinfo);\n"
#~ "int IMP_ISP_Tuning_SetTemperDnsAttr(IMPISPTemperDenoiseAttr *pinfo);\n"
#~ "int IMP_ISP_Agordo_GetTemperDnsAttr(IMPISPTemperDenoiseAttr *pinfo);\n"
#~ "int IMP_ISP_Tuning_SetWDRAttr(IMPISPTuningOpsMode mode);\n"
#~ "int IMP_ISP_Agordo_GetWDRAttr(IMPISPTuningOpsMode *pmode);\n"
#~ "int IMP_ISP_Tuning_SetSceneMode(IMPISPSceneMode mode);\n"
#~ "int IMP_ISP_Agordo_GetSceneMode(IMPISPSceneMode *pmode);\n"
#~ "int IMP_ISP_Tuning_SetColorfxMode(IMPISPColorfxMode mode);\n"
#~ "int IMP_ISP_Agordo_GetColorfxMode(IMPISPColorfxMode *pmode);\n"
#~ "int IMP_ISP_Tuning_Agordu Brilecon(sennoma signo brila);\n"
#~ "int IMP_ISP_Agordo_GetBrightness(unsigned char *pbright);\n"
#~ "int IMP_ISP_Tuning_SetContrast(sennoma signokontrasto);\n"
#~ "int IMP_ISP_Agordo_GetContrast(unsigned char *pcontrast);\n"
#~ "int IMP_ISP_Tuning_SetSharpness(sennoma akra akreco);\n"
#~ "int IMP_ISP_Agordo_GetSharpness(unsigned char *psharpness);\n"
#~ "int IMP_ISP_Tuning_SetSaturation(sennoma signo (sat 22 °);\n"
#~ "int IMP_ISP_Agordo_GetSaturation(unsigned char *psat);\n"
#~ "int IMP_ISP_Tuning_SetISPProcess(IMPISPTuningOpsMode mode);\n"
#~ "int IMP_ISP_Agordo_SetFWFreeze(IMPISPTuningOpsMode mode);\n"
#~ "int IMP_ISP_Tuning_SaveAllParam(char *vojo);\n"
#~ "int IMP_ISP_Agordo_SetISPBypass(IMPISPTuningOpsMode enable);\n"
#~ "int IMP_ISP_Tuning_GetTotalGain(uint32_t *gain);\n"
#~ "int IMP_ISP_Tuning_Agordu ISPHflip(IMPISPTuningOpsMode mode);\n"
#~ "int IMP_ISP_Agordo_GetISPHflip(IMPISPTuningOpsMode *pmode);\n"
#~ "int IMP_ISP_Tuning_SetISPVflip(IMPISPTuningOpsMode mode);\n"
#~ "int IMP_ISP_Agordo_GetISPVflip(IMPISPTuningOpsMode *pmode);\n"
#~ "int IMP_ISP_Tuning_SetISPRunningMode(IMPISPRunningMode mode);\n"
#~ "int IMP_ISP_Agordo_GetISPRunningMode(IMPISPRunningMode *pmode);\n"
#~ "int IMP_ISP_Tuning_SetAeStrategy(IMPISPAeStrategy-strategio);\n"
#~ "int IMP_ISP_Agordo_GetAeStrategy(IMPISPAeStrategy *pstrategy);\n"
#~ "int IMP_ISP_Tuning_SetGamma(IMPISPGamma *gama);\n"
#~ "int IMP_ISP_Agordo_GetGamma(IMPISPGamma *gamma);\n"
#~ "int IMP_ISP_Tuning_SetAeComp(int comp);\n"
#~ "int IMP_ISP_Agordo_GetAeComp(int *comp);\n"
#~ "int IMP_ISP_Tuning_SetExpr(IMPISPExpr *ekspr);\n"
#~ "int IMP_ISP_Agordo_GetExpr(IMPISPExpr *expr);\n"
#~ "int IMP_ISP_Tuning_AE_GetROI(IMPISPAERoi *isp_ae_roi);\n"
#~ "int IMP_ISP_Tuning_AE_SetROI(IMPISPAERoi *isp_ae_roi);\n"
#~ "int IMP_ISP_Tuning_SetWB(IMPISPWB *wb);\n"
#~ "int IMP_ISP_Agordo_GetWB(IMPISPWB *wb);\n"
#~ "int IMP_ISP_Tuning_GetWB_Statis(IMPISPWB *wb);\n"
#~ "int IMP_ISP_Tuning_Awb_GetCwfShift(IMPISPWB *isp_wb_attr);\n"
#~ "int IMP_ISP_Tuning_Awb_SetCwfShift(IMPISPWB *isp_wb_attr);\n"
#~ "int IMP_ISP_Tuning_SetMaxAgain(uint32_t gain);\n"
#~ "int IMP_ISP_Tuning_GetMaxAgain(uint32_t *gain);\n"
#~ "int IMP_ISP_Tuning_SetMaxDgain(uint32_t gain);\n"
#~ "int IMP_ISP_Tuning_GetMaxDgain(uint32_t *gain);\n"
#~ "int IMP_ISP_Tuning_SetVideoDrop(malplena (*cb)(malplena));\n"
#~ "int IMP_ISP_Agordo_SetHiLightDepress(uint32_t forto);\n"
#~ "int IMP_ISP_Agordo_SetTemperStrength(uint32_t-proporcio);\n"
#~ "int IMP_ISP_Agordo_SetSinterStrength(uint32_t-proporcio);\n"
#~ "int IMP_ISP_Agordo_SetDPStrength(uint32_t-proporcio);\n"
#~ "int IMP_ISP_Agordo_SetAntiFogAttr(IMPISPAntiFogAttr attr);\n"
#~ "int IMP_ISP_Tuning_GetEVAttr(IMPISPEVAttr *attr);\n"
#~ msgstr ""
#~ "int IMP_ISP_فتح(فارغ)؛\n"
#~ "int IMP_ISP_إغلاق(فارغ)؛\n"
#~ "int IMP_ISP_AddSensor(IMPSensorInfo *pinfo)؛\n"
#~ "int IMP_ISP_DelSensor(IMPSensorInfo *pinfo)؛\n"
#~ "int IMP_ISP_EnableSensor(فارغ)؛\n"
#~ "int IMP_ISP_DisableSensor(فارغ)؛\n"
#~ "int IMP_ISP_SetSensorRegister(uint32_t reg, uint32_قيمة t)؛\n"
#~ "الباحث IMP_ISP_GetSensorRegister(uint32_t reg, uint32_ر *بقيمة)؛\n"
#~ "int IMP_ISP_EnableTuning(فارغ)؛\n"
#~ "الباحث IMP_ISP_DisableTuning(فارغة)؛\n"
#~ "الباحث IMP_ISP_تكوين_SetSensorFPS(uint32_ر إطارا في الثانية (درجة 63 درجة) ر إطارا في الثانية (درجة 65 درجة) ISP_Tuning_GetSensorFPS(uint32_t *fps_الأسطوانات، uint32_t *fps_دن)؛\n"
#~ "الباحث IMP_ISP_تكوين_SetAntiFlickerAttr(IMPISPAntiflickerAttr attr);\n"
#~ "int IMP_ISP_Tuning_GetAntiFlickerAttr(IMPISPAntiflickerAttr *pattr)؛\n"
#~ "الباحث IMP_ISP_تكوين_SetRawDRC(IMPISPDrcAttr *pinfo);\n"
#~ "int IMP_ISP (درجة 101 درجة) GetRawDRC (درجة 103 درجة) IMPISPDrcAttr (درجة 104 درجة) pinfo (درجة 105 درجة).\n"
#~ "int IMP_ISP_التكوين_SetSinterDnsAttr(IMPISPSinterDenoiseAttr *pinfo);\n"
#~ "int IMP_ISP_Tuning_GetSinterDnsAttr(IMPISPSinterDenoiseAttr *pinfo)؛\n"
#~ "int IMP_ISP_التكوين_SetTemperDnsCtl(IMPISPTemperDenoiseAttr *pinfo);\n"
#~ "int IMP_ISP_Tuning_SetTemperDnsAttr(IMPISPTemperDenoiseAttr *pinfo)؛\n"
#~ "int IMP_ISP_التكوين_GetTemperDnsAttr(IMPISPTemperDenoiseAttr *pinfo);\n"
#~ "int IMP_ISP_Tuning_SetWDRAttr(وضع IMPISPTuningOpsMode)؛ (° 147 درجة) الباحث IMP_ISP_وضع (درجة 150 درجة) ISP (درجة 156 درجة) SetSceneMode (درجة 158 درجة) واسطة IMPISPSceneMode (درجة 159 درجة).\n"
#~ "int IMP_ISP_الإعداد_GetSceneMode(IMPISPSceneMode *pmode);\n"
#~ "int IMP_ISP_Tuning_SetColorfxMode(وضع IMPISPColorfxMode)؛\n"
#~ "int IMP_ISP_الإعداد_GetColorfxMode(IMPISPColorfxMode *pmode);\n"
#~ "int IMP_ISP_Tuning_ضبط السطوع(إشارة بدون اسم مشرق)؛ (° 186 درجة) الباحث IMP (درجة 187 درجة) تكوين (درجة 189 درجة) ISP (درجة 195 درجة) SetContrast (درجة 197 درجة) على النقيض من شخصية مجهول (درجة 198 درجة).\n"
#~ "int IMP_ISP_التكوين_GetContrast(unsigned char *pcontrast);\n"
#~ "int IMP_ISP_Tuning_SetSharpness(الحدة بدون اسم)؛\n"
#~ "int IMP_ISP_التكوين_GetSharpness(unsigned char *psharpness);\n"
#~ "int IMP_ISP_Tuning_ضبط التشبع(علامة غير مسماة (إلى 22 °)؛\n"
#~ "int IMP_ISP_التكوين_GetSaturation(unsigned char *psat);\n"
#~ "int IMP_ISP_Tuning_SetISPProcess(IMPISPTuningOpsMode mode)؛\n"
#~ "int IMP_ISP_التكوين_SetFWFreeze(IMPISPTuningOpsMode mode);\n"
#~ "int IMP_ISP_Tuning_SaveAllParam(مسار شار *)؛\n"
#~ "int IMP_ISP_الإعداد_SetISPBypass(IMPISPTuningOpsMode enable);\n"
#~ "int IMP_ISP_Tuning_GetTotalGain(uint32_t *gain);\n"
#~ "int IMP_ISP_Tuning_اضبط ISPHflip(IMPISPTuningOpsMode الوضع)؛ (° 272 درجة) الباحث IMP (درجة 273 درجة) تكوين (درجة 275 درجة) ISP (درجة 281 درجة) SetISPVflip (درجة 283 درجة) وضع IMPISPTuningOpsMode (درجة 284 درجة).\n"
#~ "int IMP_ISP_التكوين_GetISPVflip(IMPISPTuningOpsMode *pmode);\n"
#~ "int IMP_ISP_Tuning_SetISPRunningMode(وضع IMPISPRunningMode)؛\n"
#~ "int IMP_ISP_التكوين_GetISPRunningMode(IMPISPRunningMode *pmode);\n"
#~ "int IMP_ISP_Tuning_SetAeStrategy(استراتيجية IMPISPAeStrategy)؛\n"
#~ "int IMP_ISP_التكوين_GetAeStrategy(IMPISPAeStrategy *pstrategy);\n"
#~ "int IMP_ISP_Tuning_SetGamma(نطاق IMPISPGamma *)؛ (° 325 درجة) الباحث IMP (درجة 326 درجة) تكوين (درجة 328 درجة) ISP (درجة 334 درجة) SetAeComp (درجة 336 درجة) الباحث شركات (° 337 درجة).\n"
#~ "int IMP_ISP_التكوين_GetAeComp(int *comp);\n"
#~ "int IMP_ISP_Tuning_SetExpr(IMPISPExpr *ekspr)؛ (° 352 درجة) الباحث IMP (درجة 353 درجة) تكوين (درجة 355 درجة) ISP (درجة 361 درجة) AE (درجة 363 درجة) عبد اللطيف (درجة 367 درجة) ISP (درجة 371 درجة) AE (درجة 373 درجة) عبد اللطيف_roi);\n"
#~ "int IMP_ISP_Tuning_SetWB(IMPISPWB *wb)؛\n"
#~ "int IMP_ISP_التكوين_GetWB(IMPISPWB *wb);\n"
#~ "int IMP_ISP_Tuning_GetWB_Statis(IMPISPWB *wb);\n"
#~ "int IMP_ISP_Tuning_Awb_GetCwfShift(IMPISPWB *isp_wb_attr);\n"
#~ "int IMP_ISP_Tuning_Awb_SetCwfShift(IMPISPWB *isp_wb_attr);\n"
#~ "int IMP_ISP_Tuning_SetMaxAgain(uint32_t gain);\n"
#~ "int IMP_ISP_Tuning_GetMaxAgain(uint32_t *gain);\n"
#~ "int IMP_) درجة) ISP (درجة 438 درجة) SetMaxDgain (درجة 440 درجة) uint32 (درجة 441 درجة) ISP (درجة 445 درجة) GetMaxDgain (درجة 447 درجة) uint32 (درجة 448 درجة) ISP (درجة 453 درجة) SetVideoDrop(تفريغ (درجة 456 درجة) CB (° 457 درجة) تفريغ (درجة 458 درجة). (° 459 درجة) الباحث IMP (درجة 460 درجة) تكوين (درجة 462 درجة) قوة ر (درجة 465 درجة).\n"
#~ "int IMP_ISP_التكوين_SetTemperStrength(uint32_نسبة t)؛\n"
#~ "int IMP_ISP_التكوين_SetSinterStrength(uint32_نسبة t)؛ (° 480 درجة) الباحث IMP (درجة 481 درجة) تكوين (درجة 483 درجة) تي نسبة (درجة 486 درجة).\n"
#~ "int IMP_ISP_التكوين_SetAntiFogAttr(IMPISPAntiFogAttr attr);\n"
#~ "int IMP_ISP_Tuning_GetEVAttr(IMPISPEVAttr *attr)؛ (° 500 درجة)\n"
