# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-04 16:42+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: ./includes.fr/imp_isp.h:6
#, markdown-text, no-wrap
msgid ""
"/*\n"
" * IMP ISP header file.\n"
" *\n"
" * Copyright (C) 2014 Ingenic Semiconductor Co.,Ltd\n"
" */\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:9
#, markdown-text, no-wrap
msgid ""
"#ifndef __IMP_ISP_H__\n"
"#define __IMP_ISP_H__\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:11
#, markdown-text, no-wrap
msgid "#include \"imp_common.h\"\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:18
#, markdown-text, no-wrap
msgid ""
"#ifdef __cplusplus\n"
"#if __cplusplus\n"
"extern \"C\"\n"
"{\n"
"#endif\n"
"#endif /* __cplusplus */\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:23
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @file\n"
" * ISP Fichier d'en-tête du module \n"
" */\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:105
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @defgroup IMP_ISP\n"
" * @ingroup imp\n"
" * @brief  Unité de traitement du signal d'image. Inclut principalement les "
"paramètres d'effet d'image, le changement de mode et Sensor Enregistrement, "
"ajout, suppression, etc. \n"
" *\n"
" * ISP Le module n'a rien à voir avec le flux de données ， Pas besoin de "
"continuer Bind， S'applique uniquement aux réglages des paramètres d'effet et "
"Sensor contrôler. \n"
" *\n"
" * ISP Les étapes d'activation du module sont les suivantes: \n"
" * @code\n"
" * int ret = 0;\n"
" * ret = IMP_ISP_Open(); // step.1  créer ISP Module \n"
" * if(ret < 0){\n"
" *     printf(\"Failed to ISPInit\\n\");\n"
" *     return -1;\n"
" * }\n"
" * IMPSensorInfo sensor;\n"
" * sensor.name = \"xxx\";\n"
" * sensor.cbus_type = SENSOR_CONTROL_INTERFACE_I2C; // OR "
"SENSOR_CONTROL_INTERFACE_SPI\n"
" * sensor.i2c = {\n"
" * \t.type = \"xxx\", // I2C Nom de l'appareil ， Doit et sensor Conduite "
"struct i2c_device_id milieu name Unanime. \n"
" *\t.addr = xx,\t//I2C adresse \n"
" *\t.i2c_adapter_id = xx, //sensor L'existant I2C Manette ID\n"
" * }\n"
" * OR\n"
" * sensor.spi = {\n"
" *\t.modalias = \"xx\", //SPI Manette ， Manette sensor Manette struct "
"spi_device_id Manette name Manette \n"
" *\t.bus_num = xx, //SPI Adresse de bus \n"
" * }\n"
" * ret = IMP_ISP_AddSensor(&sensor); //step.2  ajoute un sensor， Avant cette "
"opération sensor Le pilote a été ajouté au noyau. \n"
" * if (ret < 0) {\n"
" *     printf(\"Failed to Register sensor\\n\");\n"
" *     return -1;\n"
" * }\n"
" *\n"
" * ret = IMP_ISP_EnableSensor(void); //step.3  Permettre sensor， à l'heure "
"actuelle sensor Démarrez la sortie des images. \n"
" * if (ret < 0) {\n"
" *     printf(\"Failed to EnableSensor\\n\");\n"
" *     return -1;\n"
" * }\n"
" *\n"
" * ret = IMP_ISP_EnableTuning(); //step.4  Démarrez la sortie des "
"images. ISP tuning,  Avant d'appeler ISP Interface de débogage. \n"
" * if (ret < 0) {\n"
" *     printf(\"Failed to EnableTuning\\n\");\n"
" *     return -1;\n"
" * }\n"
" *\n"
" *  Pour l'interface de débogage, veuillez vous référer à ISP Documentation "
"de l'interface de débogage.  //step.5  Débogage des effets. \n"
" *\n"
" * @endcode\n"
" * ISP Les étapes de désinstallation du module sont les suivantes: \n"
" * @code\n"
" * int ret = 0;\n"
" * IMPSensorInfo sensor;\n"
" * sensor.name = \"xxx\";\n"
" * ret = IMP_ISP_DisableTuning(); //step.1  fermer ISP tuning\n"
" * if (ret < 0) {\n"
" *     printf(\"Failed to disable tuning\\n\");\n"
" *     return -1;\n"
" * }\n"
" *\n"
" * ret = IMP_ISP_DisableSensor(); //step.2  fermer sensor， fermer sensor "
"Arrêter la sortie des images; avant cette opération FrameSource Tout doit "
"être fermé. \n"
" * if (ret < 0) {\n"
" *     printf(\"Failed to disable sensor\\n\");\n"
" *     return -1;\n"
" * }\n"
" *\n"
" * ret = IMP_ISP_DelSensor(&sensor); //step.3  effacer sensor， Avant cette "
"opération sensor Doit être fermé. \n"
" * if (ret < 0) {\n"
" *     printf(\"Failed to disable sensor\\n\");\n"
" *     return -1;\n"
" * }\n"
" *\n"
" * ret = IMP_ISP_Close(); //step.4  Nettoyer ISP Nettoyer ， Tout avant cette "
"opération sensor Doit être supprimé. \n"
" * if (ret < 0) {\n"
" *     printf(\"Failed to disable sensor\\n\");\n"
" *     return -1;\n"
" * }\n"
" * @endcode\n"
" *  Pour plus de méthodes d'utilisation, veuillez vous référer à Samples\n"
" * @{\n"
" */\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:113
#, markdown-text, no-wrap
msgid ""
"/**\n"
"*  Énumération des types de bus de contrôle de caméra \n"
"*/\n"
"typedef enum {\n"
"\tTX_SENSOR_CONTROL_INTERFACE_I2C = 1,\t/**< I2C Bus de contrôle  */\n"
"\tTX_SENSOR_CONTROL_INTERFACE_SPI,\t/**< SPI Bus de contrôle  */\n"
"} IMPSensorControlBusType;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:129
#, markdown-text, no-wrap
msgid ""
"/**\n"
"*  Le type de bus de contrôle de la caméra est I2C Temps ， La structure des "
"paramètres à configurer \n"
"*/\n"
"typedef struct {\n"
"\tchar type[20];\t\t/**< I2C La structure des paramètres à configurer ， Doit "
"être conduit avec la caméra struct i2c_device_id dans name Les variables "
"sont cohérentes  */\n"
"\tint addr;\t\t/**< I2C Les variables sont cohérentes  */\n"
"\tint i2c_adapter_id;\t/**< I2C Les variables sont cohérentes  */\n"
"} IMPI2CInfo;\n"
"/**\n"
"*  Les variables sont cohérentes SPI Les variables sont cohérentes ， Les "
"variables sont cohérentes \n"
"*/\n"
"typedef struct {\n"
"\tchar modalias[32];\t/**< SPI Les variables sont cohérentes ， Les variables "
"sont cohérentes struct spi_device_id Les variables sont cohérentes name Les "
"variables sont cohérentes  */\n"
"\tint bus_num;\t\t/**< SPI Les variables sont cohérentes  */\n"
"} IMPSPIInfo;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:144
#, markdown-text, no-wrap
msgid ""
"/**\n"
"*  Structure des informations d'enregistrement de la caméra \n"
"*/\n"
"typedef struct {\n"
"\tchar name[32];\t\t\t\t\t/**<  Nom de la caméra  */\n"
"\tIMPSensorControlBusType cbus_type;\t/**<  Type de bus de contrôle de "
"caméra  */\n"
"\tunion {\n"
"\t\tIMPI2CInfo i2c;\t\t\t\t/**< I2C Informations sur le bus  */\n"
"\t\tIMPSPIInfo spi;\t\t\t\t/**< SPI Informations sur le bus  */\n"
"\t};\n"
"\tunsigned short rst_gpio;\t\t/**<  webcam reset Lien d'interface GPIO， "
"Remarque: ce paramètre n'est pas activé maintenant  */\n"
"\tunsigned short pwdn_gpio;\t\t/**<  Remarque: ce paramètre n'est pas activé "
"maintenant power down Remarque: ce paramètre n'est pas activé maintenant "
"GPIO， Remarque: ce paramètre n'est pas activé maintenant  */\n"
"\tunsigned short power_gpio;\t\t/**<  Remarque: ce paramètre n'est pas "
"activé maintenant power  Remarque: ce paramètre n'est pas activé maintenant "
"GPIO， Remarque: ce paramètre n'est pas activé maintenant  */\n"
"} IMPSensorInfo;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:160
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Open(void)\n"
" *\n"
" *  allumer ISP allumer \n"
" *\n"
" * @param  non \n"
" *\n"
" * @retval 0  Succès \n"
" * @retval  non- 0  échec ， Renvoyer le code d'erreur \n"
" *\n"
" * @remark  Renvoyer le code d'erreur ISP Renvoyer le code d'erreur ， Prêt à "
"ISP Ajouter à sensor， Et allumer ISP Fonction de débogage d'effet. \n"
" *\n"
" * @attention  Cette fonction doit être ajoutée sensor A été appelé "
"avant. \n"
" */\n"
"int IMP_ISP_Open(void);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:176
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Close(void)\n"
" *\n"
" *  A été appelé avant. ISP A été appelé avant. \n"
" *\n"
" * @param  A été appelé avant. \n"
" *\n"
" * @retval 0  A été appelé avant. \n"
" * @retval  A été appelé avant. 0  A été appelé avant. ， A été appelé "
"avant. \n"
" *\n"
" * @remark ISP A été appelé avant. ，ISP Le module ne fonctionne plus. \n"
" *\n"
" * @attention  Avant d'utiliser cette fonction ， Doit garantir tout "
"FrameSource Et la fonction de débogage d'effet a été fermée ， tout sensor "
"Ont été désinstallés .\n"
" */\n"
"int IMP_ISP_Close(void);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:192
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_AddSensor(IMPSensorInfo *pinfo)\n"
" *\n"
" *  Ont été désinstallés sensor， Habitué ISP Le module fournit la source de "
"données \n"
" *\n"
" * @param[in] pinfo  Besoin d'ajouter sensor Pointeur d'information \n"
" *\n"
" * @retval 0  Pointeur d'information \n"
" * @retval  Pointeur d'information 0  Pointeur d'information ， Pointeur "
"d'information \n"
" *\n"
" * @remark  Ajouter une caméra ， Utilisé pour fournir des images. \n"
" *\n"
" * @attention  Utilisé pour fournir des images. ， Il faut s'assurer que le "
"pilote de la caméra a été enregistré dans le noyau .\n"
" */\n"
"int IMP_ISP_AddSensor(IMPSensorInfo *pinfo);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:208
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_DelSensor(IMPSensorInfo *pinfo)\n"
" *\n"
" *  Supprimer un sensor\n"
" *\n"
" * @param[in] pinfo  Doit être supprimé sensor Doit être supprimé \n"
" *\n"
" * @retval 0  Doit être supprimé \n"
" * @retval  Doit être supprimé 0  Doit être supprimé ， Doit être supprimé \n"
" *\n"
" * @remark  Supprimer une caméra. \n"
" *\n"
" * @attention  Supprimer une caméra. ， Il faut s'assurer que la caméra a "
"cessé de fonctionner ， Appelé IMP_ISP_DisableSensor fonction .\n"
" */\n"
"int IMP_ISP_DelSensor(IMPSensorInfo *pinfo);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:224
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_EnableSensor(void)\n"
" *\n"
" *  Activer un sensor\n"
" *\n"
" * @param  Activer un \n"
" *\n"
" * @retval 0  Activer un \n"
" * @retval  Activer un 0  Activer un ， Activer un \n"
" *\n"
" * @remark  Activer une caméra ， Faites-le commencer à transférer des images "
",  tel FrameSource Pour sortir l'image ， à la fois ISP Ce n'est qu'alors que "
"l'effet peut être débogué. \n"
" *\n"
" * @attention  Ce n'est qu'alors que l'effet peut être débogué. ， Il faut "
"s'assurer que la caméra a été ajoutée ISP Il faut s'assurer que la caméra a "
"été ajoutée .\n"
" */\n"
"int IMP_ISP_EnableSensor(void);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:240
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_DisableSensor(void)\n"
" *\n"
" *  Désactiver un sensor\n"
" *\n"
" * @param  Désactiver un \n"
" *\n"
" * @retval 0  Désactiver un \n"
" * @retval  Désactiver un 0  Désactiver un ， Désactiver un \n"
" *\n"
" * @remark  Désactiver une caméra ， Arrêter de transmettre des images ,  "
"Arrêter de transmettre des images FrameSource Impossible de sortir l'image ， "
"Impossible de sortir l'image ISP L'effet ne peut pas non plus être "
"débogué. \n"
" *\n"
" * @attention  L'effet ne peut pas non plus être débogué. ， L'effet ne peut "
"pas non plus être débogué. FrameSource Ont arrêté de sortir des images ， "
"Dans le même temps, le débogage des effets est également à l'état désactivé "
".\n"
" */\n"
"int IMP_ISP_DisableSensor(void);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:258
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_SetSensorRegister(uint32_t reg, uint32_t value)\n"
" *\n"
" *  Installation sensor La valeur d'un registre \n"
" *\n"
" * @param[in] reg  Adresse d'inscription \n"
" *\n"
" * @param[in] value  Enregistrer la valeur \n"
" *\n"
" * @retval 0  Enregistrer la valeur \n"
" * @retval  Enregistrer la valeur 0  Enregistrer la valeur ， Enregistrer la "
"valeur \n"
" *\n"
" * @remark  Vous pouvez en définir un directement sensor La valeur du "
"registre. \n"
" *\n"
" * @attention  La valeur du registre. ， Il faut s'assurer que la caméra a "
"été activée .\n"
" */\n"
"int IMP_ISP_SetSensorRegister(uint32_t reg, uint32_t value);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:276
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_GetSensorRegister(uint32_t reg, uint32_t *value)\n"
" *\n"
" *  Obtenir sensor Obtenir \n"
" *\n"
" * @param[in] reg  Obtenir \n"
" *\n"
" * @param[in] value  Pointeur pour enregistrer la valeur \n"
" *\n"
" * @retval 0  Pointeur pour enregistrer la valeur \n"
" * @retval  Pointeur pour enregistrer la valeur 0  Pointeur pour enregistrer "
"la valeur ， Pointeur pour enregistrer la valeur \n"
" *\n"
" * @remark  Vous pouvez en obtenir un directement sensor Vous pouvez en "
"obtenir un directement \n"
" *\n"
" * @attention  Vous pouvez en obtenir un directement ， Vous pouvez en "
"obtenir un directement .\n"
" */\n"
"int IMP_ISP_GetSensorRegister(uint32_t reg, uint32_t *value);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:282
#, markdown-text, no-wrap
msgid ""
"typedef enum {\n"
"\tIMPISP_TUNING_OPS_MODE_DISABLE,\t\t\t/**<  Désactiver la fonction du "
"module  */\n"
"\tIMPISP_TUNING_OPS_MODE_ENABLE,\t\t\t/**<  Activer la fonction du module  "
"*/\n"
"\tIMPISP_TUNING_OPS_MODE_BUTT,\t\t\t/**<  Utilisé pour juger de la validité "
"des paramètres ， La taille du paramètre doit être inférieure à cette valeur  "
"*/\n"
"} IMPISPTuningOpsMode;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:288
#, markdown-text, no-wrap
msgid ""
"typedef enum {\n"
"\tIMPISP_TUNING_OPS_TYPE_AUTO,\t\t\t/**<  Le fonctionnement du module est en "
"mode automatique  */\n"
"\tIMPISP_TUNING_OPS_TYPE_MANUAL,\t\t\t/**<  Le fonctionnement de ce module "
"est en mode manuel  */\n"
"\tIMPISP_TUNING_OPS_TYPE_BUTT,\t\t\t/**<  Le fonctionnement de ce module est "
"en mode manuel ， Le fonctionnement de ce module est en mode manuel  */\n"
"} IMPISPTuningOpsType;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:302
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_EnableTuning(void)\n"
" *\n"
" *  Le fonctionnement de ce module est en mode manuel ISP Fonction de "
"débogage d'effet \n"
" *\n"
" * @param  Fonction de débogage d'effet \n"
" *\n"
" * @retval 0  Fonction de débogage d'effet \n"
" * @retval  Fonction de débogage d'effet 0  Fonction de débogage d'effet ， "
"Fonction de débogage d'effet \n"
" *\n"
" * @attention  Fonction de débogage d'effet ， Doit garantir "
"IMP_ISP_EnableSensor A été exécuté et renvoyé avec succès .\n"
" */\n"
"int IMP_ISP_EnableTuning(void);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:316
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_DisableTuning(void)\n"
" *\n"
" *  Désactiver ISP Désactiver \n"
" *\n"
" * @param  Désactiver \n"
" *\n"
" * @retval 0  Désactiver \n"
" * @retval  Désactiver 0  Désactiver ， Désactiver \n"
" *\n"
" * @attention  Désactiver ， Il faut s'assurer que le sensor antérieur à ， "
"Désactiver d'abord ISP Débogage d'effet (c'est-à-dire, appelez cette "
"fonction) .\n"
" */\n"
"int IMP_ISP_DisableTuning(void);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:331
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetSensorFPS(uint32_t fps_num, uint32_t fps_den)\n"
" *\n"
" *  Définir la fréquence d'images de sortie de la caméra \n"
" *\n"
" * @param[in] fps_num  Définir le paramètre du numérateur de la fréquence "
"d'images \n"
" * @param[in] fps_den  Définir le paramètre dénominateur de la fréquence "
"d'images \n"
" *\n"
" * @retval 0  Définir le paramètre dénominateur de la fréquence d'images \n"
" * @retval  Définir le paramètre dénominateur de la fréquence d'images 0  "
"Définir le paramètre dénominateur de la fréquence d'images ， Définir le "
"paramètre dénominateur de la fréquence d'images \n"
" *\n"
" * @attention  Définir le paramètre dénominateur de la fréquence d'images ， "
"Définir le paramètre dénominateur de la fréquence d'images "
"IMP_ISP_EnableSensor  avec  IMP_ISP_EnableTuning A été appelé. \n"
" */\n"
"int IMP_ISP_Tuning_SetSensorFPS(uint32_t fps_num, uint32_t fps_den);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:347
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetSensorFPS(uint32_t *fps_num, uint32_t "
"*fps_den)\n"
" *\n"
" *  Obtenir la fréquence d'images de sortie de la caméra \n"
" *\n"
" * @param[in] fps_num  Obtenez un pointeur sur les paramètres moléculaires "
"de la fréquence d'images \n"
" * @param[in] fps_den  Obtenir un pointeur vers le paramètre du dénominateur "
"de la fréquence d'images \n"
" *\n"
" * @retval 0  Obtenir un pointeur vers le paramètre du dénominateur de la "
"fréquence d'images \n"
" * @retval  Obtenir un pointeur vers le paramètre du dénominateur de la "
"fréquence d'images 0  Obtenir un pointeur vers le paramètre du dénominateur "
"de la fréquence d'images ， Obtenir un pointeur vers le paramètre du "
"dénominateur de la fréquence d'images \n"
" *\n"
" * @attention  Obtenir un pointeur vers le paramètre du dénominateur de la "
"fréquence d'images ， Obtenir un pointeur vers le paramètre du dénominateur "
"de la fréquence d'images IMP_ISP_EnableSensor  Obtenir un pointeur vers le "
"paramètre du dénominateur de la fréquence d'images  IMP_ISP_EnableTuning "
"Obtenir un pointeur vers le paramètre du dénominateur de la fréquence "
"d'images \n"
" * @attention  Cette fonction doit être appelée pour obtenir la fréquence "
"d'images par défaut de la caméra avant que le canal d'image ne soit activé "
"pour démarrer la transmission des données. \n"
" */\n"
"int IMP_ISP_Tuning_GetSensorFPS(uint32_t *fps_num, uint32_t *fps_den);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:357
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * ISP Structure des paramètres de propriété anti-scintillement. \n"
" */\n"
"typedef enum {\n"
"\tIMPISP_ANTIFLICKER_DISABLE,\t/**<  Structure des paramètres de propriété "
"anti-scintillement. ISP Fonction anti-flash  */\n"
"\tIMPISP_ANTIFLICKER_50HZ,\t/**<  Fonction anti-flash ISP Fonction "
"anti-flash ,  Et réglez la fréquence sur 50HZ */\n"
"\tIMPISP_ANTIFLICKER_60HZ,\t/**<  Et réglez la fréquence sur ISP Et réglez "
"la fréquence sur ， Et réglez la fréquence sur 60HZ */\n"
"\tIMPISP_ANTIFLICKER_BUTT,\t/**<  Et réglez la fréquence sur ， Et réglez la "
"fréquence sur  */\n"
"} IMPISPAntiflickerAttr;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:371
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetAntiFlickerAttr(IMPISPAntiflickerAttr attr)\n"
" *\n"
" *  Et réglez la fréquence sur ISP Propriétés anti-flash \n"
" *\n"
" * @param[in] attr  Définir la valeur du paramètre \n"
" *\n"
" * @retval 0  Définir la valeur du paramètre \n"
" * @retval  Définir la valeur du paramètre 0  Définir la valeur du paramètre "
"， Définir la valeur du paramètre \n"
" *\n"
" * @attention  Définir la valeur du paramètre ， Définir la valeur du "
"paramètre ISP La fonction de débogage des effets a été activée .\n"
" */\n"
"int IMP_ISP_Tuning_SetAntiFlickerAttr(IMPISPAntiflickerAttr attr);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:385
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetAntiFlickerAttr(IMPISPAntiflickerAttr *pattr)\n"
" *\n"
" *  obtenir ISP obtenir \n"
" *\n"
" * @param[in] pattr  Obtenir le pointeur de valeur de paramètre \n"
" *\n"
" * @retval 0  Obtenir le pointeur de valeur de paramètre \n"
" * @retval  Obtenir le pointeur de valeur de paramètre 0  Obtenir le "
"pointeur de valeur de paramètre ， Obtenir le pointeur de valeur de paramètre "
"\n"
" *\n"
" * @attention  Obtenir le pointeur de valeur de paramètre ， Obtenir le "
"pointeur de valeur de paramètre ISP Obtenir le pointeur de valeur de "
"paramètre .\n"
" */\n"
"int IMP_ISP_Tuning_GetAntiFlickerAttr(IMPISPAntiflickerAttr *pattr);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:397
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * ISP  Mode de fonctionnement du module de compression de plage "
"dynamique. \n"
" */\n"
"typedef enum {\n"
"\tIMPISP_DRC_MANUAL,\t\t\t\t/**< ISP  Mode manuel du module de compression "
"de plage dynamique  */\n"
"\tIMPISP_DRC_UNLIMIT,\t\t\t\t/**< ISP  Mode de compression le plus élevé du "
"module de compression de plage dynamique  */\n"
"\tIMPISP_DRC_HIGH,\t\t\t\t/**< ISP  Mode de compression élevée du module de "
"compression de plage dynamique  */\n"
"\tIMPISP_DRC_MEDIUM,\t\t\t\t/**< ISP  Mode de compression dans le module de "
"compression de plage dynamique  */\n"
"\tIMPISP_DRC_LOW,\t\t\t\t\t/**< ISP  Mode de compression basse du module de "
"compression de plage dynamique  */\n"
"\tIMPISP_DRC_DISABLE,\t\t\t\t/**< ISP  Le module de compression de plage "
"dynamique n'est pas activé  */\n"
"} IMPISPDrcMode;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:409
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * ISP  Paramètres d'attribut du module de compression de plage "
"dynamique. \n"
" */\n"
"typedef struct {\n"
"\tIMPISPDrcMode mode;\t\t\t\t/**< ISP  Sélection du mode de fonctionnement "
"du module de compression de plage dynamique  */\n"
"\tunsigned char drc_strength;\t\t\t/**<  Valeur cible définie en mode manuel "
"， La plage de valeurs est [0, 0xff] */\n"
"\tunsigned char slop_max;\t\t\t\t/**<  Paramètres de contrôle de la force ， "
"Paramètres de contrôle de la force [0, oxff] */\n"
"\tunsigned char slop_min;\t\t\t\t/**<  Paramètres de contrôle de la force ， "
"Paramètres de contrôle de la force [0, oxff] */\n"
"\tunsigned short black_level;\t\t\t/**< DRC Valeur de pixel minimale "
"améliorée ， Valeur de pixel minimale améliorée [0, oxfff] */\n"
"\tunsigned short white_level;\t\t\t/**< DRC Valeur de pixel maximale "
"améliorée ， Valeur de pixel maximale améliorée [0, oxfff] */\n"
"} IMPISPDrcAttr;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:425
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetRawDRC(IMPISPDrcAttr *pinfo)\n"
" *\n"
" *  Valeur de pixel maximale améliorée ISP RAW Figure paramètres du module "
"de compression de plage dynamique \n"
" *\n"
" * @param[in] pinfo  Pointeur de paramètre de plage dynamique \n"
" *\n"
" * @retval 0  Pointeur de paramètre de plage dynamique \n"
" * @retval  Pointeur de paramètre de plage dynamique 0  Pointeur de "
"paramètre de plage dynamique ， Pointeur de paramètre de plage dynamique \n"
" *\n"
" * @remark  Pointeur de paramètre de plage dynamique RGB RAW Type "
"d'opération de compression de plage dynamique graphique ， force ， Les "
"valeurs de pixel maximum et minimum qui doivent être améliorées. \n"
" *\n"
" * @attention  Les valeurs de pixel maximum et minimum qui doivent être "
"améliorées. ， Les valeurs de pixel maximum et minimum qui doivent être "
"améliorées. ISP Les valeurs de pixel maximum et minimum qui doivent être "
"améliorées. .\n"
" */\n"
"int IMP_ISP_Tuning_SetRawDRC(IMPISPDrcAttr *pinfo);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:441
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetRawDRC(IMPISPDrcAttr *pinfo)\n"
" *\n"
" *  Les valeurs de pixel maximum et minimum qui doivent être améliorées. ISP "
"RAW Les valeurs de pixel maximum et minimum qui doivent être améliorées. \n"
" *\n"
" * @param[in] pinfo  Les valeurs de pixel maximum et minimum qui doivent "
"être améliorées. \n"
" *\n"
" * @retval 0  Les valeurs de pixel maximum et minimum qui doivent être "
"améliorées. \n"
" * @retval  Les valeurs de pixel maximum et minimum qui doivent être "
"améliorées. 0  Les valeurs de pixel maximum et minimum qui doivent être "
"améliorées. ， Les valeurs de pixel maximum et minimum qui doivent être "
"améliorées. \n"
" *\n"
" * @remark  Les valeurs de pixel maximum et minimum qui doivent être "
"améliorées. RGB RAW Les valeurs de pixel maximum et minimum qui doivent être "
"améliorées. ， Les valeurs de pixel maximum et minimum qui doivent être "
"améliorées. ， Les valeurs de pixel maximum et minimum qui doivent être "
"améliorées. \n"
" *\n"
" * @attention  Les valeurs de pixel maximum et minimum qui doivent être "
"améliorées. ， Les valeurs de pixel maximum et minimum qui doivent être "
"améliorées. ISP Les valeurs de pixel maximum et minimum qui doivent être "
"améliorées. .\n"
" */\n"
"int IMP_ISP_Tuning_GetRawDRC(IMPISPDrcAttr *pinfo);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:450
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * ISP  Paramètres d'attribut du module de réduction du bruit spatial. \n"
" */\n"
"typedef struct {\n"
"\tIMPISPTuningOpsMode enable;\t\t\t/**<  Activer la fonction de réduction du "
"bruit spatial  */\n"
"\tIMPISPTuningOpsType type;\t\t\t\t/**<  Type d'opération de la fonction de "
"réduction du bruit spatial ， Automatique ou manuel  */\n"
"\tunsigned char sinter_strength;\t\t\t\t/**<  Intensité de la réduction du "
"bruit spatial ， Le mode manuel est efficace ， Le mode manuel est efficace "
"[0, 0xff] */\n"
"} IMPISPSinterDenoiseAttr;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:459
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * ISP  Mode de fonctionnement du module de réduction du bruit dans le "
"domaine temporel. \n"
" */\n"
"typedef enum {\n"
"\tIMPISP_TEMPER_DISABLE,\t\t\t\t/**< ISP  Le module de réduction du bruit "
"dans le domaine temporel n'est pas activé  */\n"
"\tIMPISP_TEMPER_AUTO,\t\t\t\t\t/**< ISP  Mode automatique du module de "
"réduction du bruit dans le domaine temporel  */\n"
"\tIMPISP_TEMPER_MANUAL,\t\t\t\t/**< ISP  Mode manuel du module de réduction "
"du bruit dans le domaine temporel  */\n"
"} IMPISPTemperMode;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:467
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * ISP  Paramètres d'attribut du module de réduction du bruit dans le "
"domaine temporel. \n"
" */\n"
"typedef struct imp_isp_temper_denoise_attr {\n"
"\tIMPISPTemperMode type;\t\t\t\t\t/**<  Type d'opération de la fonction de "
"réduction du bruit dans le domaine temporel ， Type d'opération de la "
"fonction de réduction du bruit dans le domaine temporel ， Type d'opération "
"de la fonction de réduction du bruit dans le domaine temporel  */\n"
"\tunsigned char temper_strength;\t\t\t\t/**<  Intensité de la réduction du "
"bruit dans le domaine temporel ， Intensité de la réduction du bruit dans le "
"domaine temporel ， Intensité de la réduction du bruit dans le domaine "
"temporel [0, 0xff] */\n"
"} IMPISPTemperDenoiseAttr;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:484
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetSinterDnsAttr(IMPISPSinterDenoiseAttr *pinfo)\n"
" *\n"
" *  Intensité de la réduction du bruit dans le domaine temporel ISP  "
"Paramètres du module de réduction du bruit spatial \n"
" *\n"
" * @param[in] pinfo  Pointeur de paramètre de réduction du bruit dans le "
"domaine temporel \n"
" *\n"
" * @retval 0  Pointeur de paramètre de réduction du bruit dans le domaine "
"temporel \n"
" * @retval  Pointeur de paramètre de réduction du bruit dans le domaine "
"temporel 0  Pointeur de paramètre de réduction du bruit dans le domaine "
"temporel ， Pointeur de paramètre de réduction du bruit dans le domaine "
"temporel \n"
" *\n"
" * @remark  Définissez les paramètres de correction du module de réduction "
"du bruit spatial. \n"
" *\n"
" * @attention  Définissez les paramètres de correction du module de "
"réduction du bruit spatial. ， Définissez les paramètres de correction du "
"module de réduction du bruit spatial. ISP Définissez les paramètres de "
"correction du module de réduction du bruit spatial. .\n"
" */\n"
"int IMP_ISP_Tuning_SetSinterDnsAttr(IMPISPSinterDenoiseAttr *pinfo);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:532
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetSinterDnsAttr(IMPISPSinterDenoiseAttr *pinfo)\n"
" *\n"
" *  Définissez les paramètres de correction du module de réduction du bruit "
"spatial. ISP  Définissez les paramètres de correction du module de réduction "
"du bruit spatial. \n"
" *\n"
" * @param[in] pinfo  Pointeur de paramètre de réduction du bruit spatial \n"
" *\n"
" * @retval 0  Pointeur de paramètre de réduction du bruit spatial \n"
" * @retval  Pointeur de paramètre de réduction du bruit spatial 0  Pointeur "
"de paramètre de réduction du bruit spatial ， Pointeur de paramètre de "
"réduction du bruit spatial \n"
" *\n"
" * @remark  Obtenez les paramètres de correction du module de réduction du "
"bruit spatial. \n"
" *\n"
" * @attention  Obtenez les paramètres de correction du module de réduction "
"du bruit spatial. ， Obtenez les paramètres de correction du module de "
"réduction du bruit spatial. ISP Obtenez les paramètres de correction du "
"module de réduction du bruit spatial. .\n"
" */\n"
"int IMP_ISP_Tuning_GetSinterDnsAttr(IMPISPSinterDenoiseAttr *pinfo);\n"
"#if 0\n"
"/**\n"
"* @fn int IMP_ISP_Tuning_SetTemperDnsCtl(IMPISPTemperDenoiseAttr *pinfo);\n"
"*\n"
"*  Obtenez les paramètres de correction du module de réduction du bruit "
"spatial. ISP  Mode du module de réduction du bruit dans le domaine temporel "
"\n"
"*\n"
"* @param[in] pinfo  Mode du module de réduction du bruit dans le domaine "
"temporel \n"
"*\n"
"* @retval 0  Mode du module de réduction du bruit dans le domaine temporel "
"\n"
"* @retval  Mode du module de réduction du bruit dans le domaine temporel 0  "
"Mode du module de réduction du bruit dans le domaine temporel ， Mode du "
"module de réduction du bruit dans le domaine temporel \n"
"*\n"
"* @remark  Définissez les paramètres de mode du module de réduction du bruit "
"dans le domaine temporel ， Le mode automatique par défaut. \n"
"*\n"
"* @attention  Le mode automatique par défaut. ， Le mode automatique par "
"défaut. ISP Le mode automatique par défaut. .\n"
"*/\n"
"int IMP_ISP_Tuning_SetTemperDnsCtl(IMPISPTemperDenoiseAttr *pinfo);\n"
"#endif\n"
"/**\n"
" * @fn int IMP_ISP_Tuning_SetTemperDnsAttr(IMPISPTemperDenoiseAttr *pinfo)\n"
" *\n"
" *  Le mode automatique par défaut. ISP  Paramètres du module de réduction "
"du bruit dans le domaine temporel \n"
" *\n"
" * @param[in] pinfo  Paramètres du module de réduction du bruit dans le "
"domaine temporel \n"
" *\n"
" * @retval 0  Paramètres du module de réduction du bruit dans le domaine "
"temporel \n"
" * @retval  Paramètres du module de réduction du bruit dans le domaine "
"temporel 0  Paramètres du module de réduction du bruit dans le domaine "
"temporel ， Paramètres du module de réduction du bruit dans le domaine "
"temporel \n"
" *\n"
" * @remark  Définissez les paramètres de correction du module de réduction "
"du bruit dans le domaine temporel ， Le module est activé par défaut, car le "
"module nécessite de la mémoire supplémentaire ， Veuillez fermer le module si "
"vous n'en avez pas besoin ， La mémoire est libérée une fois fermée ， Ne peut "
"plus être ouvert. \n"
" *\n"
" * @attention  Ne peut plus être ouvert. ， Ne peut plus être ouvert. ISP Ne "
"peut plus être ouvert. .\n"
" */\n"
"int IMP_ISP_Tuning_SetTemperDnsAttr(IMPISPTemperDenoiseAttr *pinfo);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:548
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetTemperDnsAttr(IMPISPTemperDenoiseAttr *pinfo)\n"
" *\n"
" *  Ne peut plus être ouvert. ISP  Ne peut plus être ouvert. \n"
" *\n"
" * @param[in] pinfo  Pointeur de paramètre du module de réduction du bruit "
"dans le domaine temporel \n"
" *\n"
" * @retval 0  Pointeur de paramètre du module de réduction du bruit dans le "
"domaine temporel \n"
" * @retval  Pointeur de paramètre du module de réduction du bruit dans le "
"domaine temporel 0  Pointeur de paramètre du module de réduction du bruit "
"dans le domaine temporel ， Pointeur de paramètre du module de réduction du "
"bruit dans le domaine temporel \n"
" *\n"
" * @remark  Obtenez les paramètres de correction du module de réduction du "
"bruit dans le domaine temporel. \n"
" *\n"
" * @attention  Obtenez les paramètres de correction du module de réduction "
"du bruit dans le domaine temporel. ， Obtenez les paramètres de correction du "
"module de réduction du bruit dans le domaine temporel. ISP Obtenez les "
"paramètres de correction du module de réduction du bruit dans le domaine "
"temporel. .\n"
" */\n"
"int IMP_ISP_Tuning_GetTemperDnsAttr(IMPISPTemperDenoiseAttr *pinfo);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:564
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetWDRAttr(IMPISPTuningOpsMode mode)\n"
" *\n"
" *  Obtenez les paramètres de correction du module de réduction du bruit "
"dans le domaine temporel. ISP  Si le module dynamique large est activé \n"
" *\n"
" * @param[in] mode  Paramètres de module dynamiques larges \n"
" *\n"
" * @retval 0  Paramètres de module dynamiques larges \n"
" * @retval  Paramètres de module dynamiques larges 0  Paramètres de module "
"dynamiques larges ， Paramètres de module dynamiques larges \n"
" *\n"
" * @remark  Définir les paramètres d'étalonnage du module dynamique large ， "
"Définir les paramètres d'étalonnage du module dynamique large ， Définir les "
"paramètres d'étalonnage du module dynamique large ， Définir les paramètres "
"d'étalonnage du module dynamique large ， Définir les paramètres d'étalonnage "
"du module dynamique large \n"
" *\n"
" * @attention  Définir les paramètres d'étalonnage du module dynamique large "
"， Définir les paramètres d'étalonnage du module dynamique large ISP Définir "
"les paramètres d'étalonnage du module dynamique large .\n"
" */\n"
"int IMP_ISP_Tuning_SetWDRAttr(IMPISPTuningOpsMode mode);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:580
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetWDRAttr(IMPISPTuningOpsMode *pmode)\n"
" *\n"
" *  Définir les paramètres d'étalonnage du module dynamique large ISP  État "
"actuel du module dynamique large \n"
" *\n"
" * @param[in] pmode  Large pointeur de paramètres de module dynamique \n"
" *\n"
" * @retval 0  Large pointeur de paramètres de module dynamique \n"
" * @retval  Large pointeur de paramètres de module dynamique 0  Large "
"pointeur de paramètres de module dynamique ， Large pointeur de paramètres de "
"module dynamique \n"
" *\n"
" * @remark  Obtenez les paramètres de correction du module dynamique "
"large. \n"
" *\n"
" * @attention  Obtenez les paramètres de correction du module dynamique "
"large. ， Obtenez les paramètres de correction du module dynamique large. ISP "
"Obtenez les paramètres de correction du module dynamique large. .\n"
" */\n"
"int IMP_ISP_Tuning_GetWDRAttr(IMPISPTuningOpsMode *pmode);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:599
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * ISP  Fonction d'extension complète ， Sélection du mode scène. \n"
" */\n"
"typedef enum {\n"
"\tIMPISP_SCENE_MODE_AUTO = 0,\t\t\t\t\t/**<  Mode automatique  */\n"
"\tIMPISP_SCENE_MODE_BEACH_SNOW = 2,\t\t\t\t/**<  Mode scène de neige sur la "
"plage  */\n"
"\tIMPISP_SCENE_MODE_CANDLE_LIGHT = 3,\t\t\t\t/**<  Mode lumière bougie  */\n"
"\tIMPISP_SCENE_MODE_DAWN_DUSK = 4,\t\t\t\t/**<  Mode soirée  */\n"
"\tIMPISP_SCENE_MODE_FALL_COLORS = 5,\t\t\t\t/**<  Mode scène d'automne  */\n"
"\tIMPISP_SCENE_MODE_FIREWORKS = 6,\t\t\t\t/**<  Mode scène de feux "
"d'artifice  */\n"
"\tIMPISP_SCENE_MODE_LANDSCAPE = 7,\t\t\t\t/**<  Mode paysage  */\n"
"\tIMPISP_SCENE_MODE_NIGHT = 8,\t\t\t\t\t/**<  Mode nuit  */\n"
"\tIMPISP_SCENE_MODE_PARTY_INDOOR = 9,\t\t\t\t/**<  Mode fête en intérieur  "
"*/\n"
"\tIMPISP_SCENE_MODE_SPORTS = 11,\t\t\t\t\t/**<  Mode sport  */\n"
"\tIMPISP_SCENE_MODE_SUNSET = 12,\t\t\t\t\t/**<  Mode coucher de soleil  */\n"
"\tIMPISP_SCENE_MODE_TEXT = 13,\t\t\t\t\t/**<  Mode texte  */\n"
"\tIMPISP_SCENE_MODE_NIGHT_PORTRAIT = 14,\t\t\t\t/**<  Mode portrait de nuit  "
"*/\n"
"} IMPISPSceneMode;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:613
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetSceneMode(IMPISPSceneMode mode)\n"
" *\n"
" *  Mode portrait de nuit ISP  Mode scène d'effets complet \n"
" *\n"
" * @param[in] mode  Paramètres du mode scène d'effet \n"
" *\n"
" * @retval 0  Paramètres du mode scène d'effet \n"
" * @retval  Paramètres du mode scène d'effet 0  Paramètres du mode scène "
"d'effet ， Paramètres du mode scène d'effet \n"
" *\n"
" * @attention  Paramètres du mode scène d'effet ， Paramètres du mode scène "
"d'effet ISP Paramètres du mode scène d'effet .\n"
" */\n"
"int IMP_ISP_Tuning_SetSceneMode(IMPISPSceneMode mode);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:627
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetSceneMode(IMPISPSceneMode *pmode)\n"
" *\n"
" *  Paramètres du mode scène d'effet ISP  Paramètres du mode scène d'effet "
"\n"
" *\n"
" * @param[in] pmode  Pointeur de paramètre du mode scène d'effet \n"
" *\n"
" * @retval 0  Pointeur de paramètre du mode scène d'effet \n"
" * @retval  Pointeur de paramètre du mode scène d'effet 0  Pointeur de "
"paramètre du mode scène d'effet ， Pointeur de paramètre du mode scène "
"d'effet \n"
" *\n"
" * @attention  Pointeur de paramètre du mode scène d'effet ， Pointeur de "
"paramètre du mode scène d'effet ISP Pointeur de paramètre du mode scène "
"d'effet .\n"
" */\n"
"int IMP_ISP_Tuning_GetSceneMode(IMPISPSceneMode *pmode);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:638
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * ISP  Pointeur de paramètre du mode scène d'effet ， Sélection du mode "
"couleur. \n"
" */\n"
"typedef enum {\n"
"\tIMPISP_COLORFX_MODE_AUTO = 0,\t\t\t\t/**<  Sélection du mode couleur.  "
"*/\n"
"\tIMPISP_COLORFX_MODE_BW = 1,\t\t\t\t/**<  Mode noir et blanc  */\n"
"\tIMPISP_COLORFX_MODE_SEPIA = 2,\t\t\t\t/**<  Mode sépia  */\n"
"\tIMPISP_COLORFX_MODE_NEGATIVE = 3,\t\t\t/**<  Mode couleur inversé  */\n"
"\tIMPISP_COLORFX_MODE_VIVID = 9,\t\t\t\t/**<  Mode vif  */\n"
"} IMPISPColorfxMode;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:652
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetColorfxMode(IMPISPColorfxMode mode)\n"
" *\n"
" *  Mode vif ISP  Mode couleur multi-effets \n"
" *\n"
" * @param[in] mode  Paramètres du mode couleur \n"
" *\n"
" * @retval 0  Paramètres du mode couleur \n"
" * @retval  Paramètres du mode couleur 0  Paramètres du mode couleur ， "
"Paramètres du mode couleur \n"
" *\n"
" * @attention  Paramètres du mode couleur ， Paramètres du mode couleur ISP "
"Paramètres du mode couleur .\n"
" */\n"
"int IMP_ISP_Tuning_SetColorfxMode(IMPISPColorfxMode mode);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:666
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetColorfxMode(IMPISPColorfxMode *pmode)\n"
" *\n"
" *  Paramètres du mode couleur ISP  Paramètres du mode couleur \n"
" *\n"
" * @param[in] pmode  Pointeur de paramètre de mode couleur \n"
" *\n"
" * @retval 0  Pointeur de paramètre de mode couleur \n"
" * @retval  Pointeur de paramètre de mode couleur 0  Pointeur de paramètre "
"de mode couleur ， Pointeur de paramètre de mode couleur \n"
" *\n"
" * @attention  Pointeur de paramètre de mode couleur ， Pointeur de paramètre "
"de mode couleur ISP Pointeur de paramètre de mode couleur .\n"
" */\n"
"int IMP_ISP_Tuning_GetColorfxMode(IMPISPColorfxMode *pmode);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:682
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetBrightness(unsigned char bright)\n"
" *\n"
" *  Pointeur de paramètre de mode couleur ISP  Luminosité d'image complète "
"\n"
" *\n"
" * @param[in] bright  Paramètre de luminosité de l'image \n"
" *\n"
" * @retval 0  Paramètre de luminosité de l'image \n"
" * @retval  Paramètre de luminosité de l'image 0  Paramètre de luminosité de "
"l'image ， Paramètre de luminosité de l'image \n"
" *\n"
" * @remark  La valeur par défaut est 128， plus que le 128 Augmenter la "
"luminosité ， Moins que 128 Diminuez la luminosité. \n"
" *\n"
" * @attention  Diminuez la luminosité. ， Diminuez la luminosité. ISP "
"Diminuez la luminosité. .\n"
" */\n"
"int IMP_ISP_Tuning_SetBrightness(unsigned char bright);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:698
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetBrightness(unsigned char *pbright)\n"
" *\n"
" *  Diminuez la luminosité. ISP  Diminuez la luminosité. \n"
" *\n"
" * @param[in] bright  Pointeur de paramètre de luminosité de l'image \n"
" *\n"
" * @retval 0  Pointeur de paramètre de luminosité de l'image \n"
" * @retval  Pointeur de paramètre de luminosité de l'image 0  Pointeur de "
"paramètre de luminosité de l'image ， Pointeur de paramètre de luminosité de "
"l'image \n"
" *\n"
" * @remark  Pointeur de paramètre de luminosité de l'image 128， Pointeur de "
"paramètre de luminosité de l'image 128 Pointeur de paramètre de luminosité "
"de l'image ， Pointeur de paramètre de luminosité de l'image 128 Pointeur de "
"paramètre de luminosité de l'image \n"
" *\n"
" * @attention  Pointeur de paramètre de luminosité de l'image ， Pointeur de "
"paramètre de luminosité de l'image ISP Pointeur de paramètre de luminosité "
"de l'image .\n"
" */\n"
"int IMP_ISP_Tuning_GetBrightness(unsigned char *pbright);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:714
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetContrast(unsigned char contrast)\n"
" *\n"
" *  Pointeur de paramètre de luminosité de l'image ISP  Contraste d'image "
"complet \n"
" *\n"
" * @param[in] contrast  Paramètre de contraste de l'image \n"
" *\n"
" * @retval 0  Paramètre de contraste de l'image \n"
" * @retval  Paramètre de contraste de l'image 0  Paramètre de contraste de "
"l'image ， Paramètre de contraste de l'image \n"
" *\n"
" * @remark  Paramètre de contraste de l'image 128， Paramètre de contraste de "
"l'image 128 Augmenter le contraste ， Augmenter le contraste 128 Réduisez le "
"contraste. \n"
" *\n"
" * @attention  Réduisez le contraste. ， Réduisez le contraste. ISP Réduisez "
"le contraste. .\n"
" */\n"
"int IMP_ISP_Tuning_SetContrast(unsigned char contrast);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:730
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetContrast(unsigned char *pcontrast)\n"
" *\n"
" *  Réduisez le contraste. ISP  Réduisez le contraste. \n"
" *\n"
" * @param[in] contrast  Pointeur de paramètre de contraste de l'image \n"
" *\n"
" * @retval 0  Pointeur de paramètre de contraste de l'image \n"
" * @retval  Pointeur de paramètre de contraste de l'image 0  Pointeur de "
"paramètre de contraste de l'image ， Pointeur de paramètre de contraste de "
"l'image \n"
" *\n"
" * @remark  Pointeur de paramètre de contraste de l'image 128， Pointeur de "
"paramètre de contraste de l'image 128 Pointeur de paramètre de contraste de "
"l'image ， Pointeur de paramètre de contraste de l'image 128 Pointeur de "
"paramètre de contraste de l'image \n"
" *\n"
" * @attention  Pointeur de paramètre de contraste de l'image ， Pointeur de "
"paramètre de contraste de l'image ISP Pointeur de paramètre de contraste de "
"l'image .\n"
" */\n"
"int IMP_ISP_Tuning_GetContrast(unsigned char *pcontrast);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:746
#, markdown-text, no-wrap
msgid ""
" /**\n"
" * @fn int IMP_ISP_Tuning_SetSharpness(unsigned char sharpness)\n"
" *\n"
" *  Pointeur de paramètre de contraste de l'image ISP  Netteté d'image "
"complète \n"
" *\n"
" * @param[in] sharpness  Valeur du paramètre de netteté de l'image \n"
" *\n"
" * @retval 0  Valeur du paramètre de netteté de l'image \n"
" * @retval  Valeur du paramètre de netteté de l'image 0  Valeur du paramètre "
"de netteté de l'image ， Valeur du paramètre de netteté de l'image \n"
" *\n"
" * @remark  Valeur du paramètre de netteté de l'image 128， Valeur du "
"paramètre de netteté de l'image 128 Augmenter la netteté ， Augmenter la "
"netteté 128 Réduisez la netteté. \n"
" *\n"
" * @attention  Réduisez la netteté. ， Réduisez la netteté. ISP Réduisez la "
"netteté. .\n"
" */\n"
"int IMP_ISP_Tuning_SetSharpness(unsigned char sharpness);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:762
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetSharpness(unsigned char *psharpness)\n"
" *\n"
" *  Réduisez la netteté. ISP  Réduisez la netteté. \n"
" *\n"
" * @param[in] sharpness  Pointeur de paramètre de netteté de l'image \n"
" *\n"
" * @retval 0  Pointeur de paramètre de netteté de l'image \n"
" * @retval  Pointeur de paramètre de netteté de l'image 0  Pointeur de "
"paramètre de netteté de l'image ， Pointeur de paramètre de netteté de "
"l'image \n"
" *\n"
" * @remark  Pointeur de paramètre de netteté de l'image 128， Pointeur de "
"paramètre de netteté de l'image 128 Pointeur de paramètre de netteté de "
"l'image ， Pointeur de paramètre de netteté de l'image 128 Pointeur de "
"paramètre de netteté de l'image \n"
" *\n"
" * @attention  Pointeur de paramètre de netteté de l'image ， Pointeur de "
"paramètre de netteté de l'image ISP Pointeur de paramètre de netteté de "
"l'image .\n"
" */\n"
"int IMP_ISP_Tuning_GetSharpness(unsigned char *psharpness);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:778
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetSaturation(unsigned char sat)\n"
" *\n"
" *  Pointeur de paramètre de netteté de l'image ISP  Saturation complète de "
"l'image avec effet \n"
" *\n"
" * @param[in] sat  Valeur du paramètre de saturation de l'image \n"
" *\n"
" * @retval 0  Valeur du paramètre de saturation de l'image \n"
" * @retval  Valeur du paramètre de saturation de l'image 0  Valeur du "
"paramètre de saturation de l'image ， Valeur du paramètre de saturation de "
"l'image \n"
" *\n"
" * @remark  Valeur du paramètre de saturation de l'image 128， Valeur du "
"paramètre de saturation de l'image 128 Augmenter la saturation ， Augmenter "
"la saturation 128 Diminue la saturation. \n"
" *\n"
" * @attention  Diminue la saturation. ， Diminue la saturation. ISP Diminue "
"la saturation. .\n"
" */\n"
"int IMP_ISP_Tuning_SetSaturation(unsigned char sat);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:824
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetSaturation(unsigned char *psat)\n"
" *\n"
" *  Diminue la saturation. ISP  Diminue la saturation. \n"
" *\n"
" * @param[in] sat  Pointeur de paramètre de saturation de l'image \n"
" *\n"
" * @retval 0  Pointeur de paramètre de saturation de l'image \n"
" * @retval  Pointeur de paramètre de saturation de l'image 0  Pointeur de "
"paramètre de saturation de l'image ， Pointeur de paramètre de saturation de "
"l'image \n"
" *\n"
" * @remark  Pointeur de paramètre de saturation de l'image 128， Pointeur de "
"paramètre de saturation de l'image 128 Pointeur de paramètre de saturation "
"de l'image ， Pointeur de paramètre de saturation de l'image 128 Pointeur de "
"paramètre de saturation de l'image \n"
" *\n"
" * @attention  Pointeur de paramètre de saturation de l'image ， Pointeur de "
"paramètre de saturation de l'image ISP Pointeur de paramètre de saturation "
"de l'image .\n"
" */\n"
"int IMP_ISP_Tuning_GetSaturation(unsigned char *psat);\n"
"#if 0\n"
"/**\n"
" * @fn int IMP_ISP_Tuning_SetISPProcess(IMPISPTuningOpsMode mode)\n"
" *\n"
" *  contourne ISP Manipulation des modules ， Sortie directe sensor image \n"
" *\n"
" * @param[in] mode  Que ce soit pour contourner ISP Paramètres de traitement "
"du module \n"
" *\n"
" * @retval 0  Paramètres de traitement du module \n"
" * @retval  Paramètres de traitement du module 0  Paramètres de traitement "
"du module ， Paramètres de traitement du module \n"
" *\n"
" * @remark  Si la fonction est activée ，sensor L'image de sortie ne passera "
"pas ISP Tout traitement du module ， Sortie directe. \n"
" *\n"
" * @attention  Sortie directe. ， Sortie directe. ISP Sortie directe. .\n"
" */\n"
"int IMP_ISP_Tuning_SetISPProcess(IMPISPTuningOpsMode mode);\n"
"#endif\n"
"/**\n"
" * @fn int IMP_ISP_Tuning_SetFWFreeze(IMPISPTuningOpsMode mode)\n"
" *\n"
" *  Geler ISP Fonctionnement du micrologiciel ， Activer signifie geler ISP "
"firmware ， c'est ISP L'algorithme automatique s'arrêtera; s'il n'est pas "
"activé, cela signifie ISP Le firmware fonctionne normalement. \n"
" *\n"
" * @param[in] mode  Est-ce gelé ISP Paramètres du micrologiciel \n"
" *\n"
" * @retval 0  Paramètres du micrologiciel \n"
" * @retval  Paramètres du micrologiciel 0  Paramètres du micrologiciel ， "
"Paramètres du micrologiciel \n"
" *\n"
" * @attention  Paramètres du micrologiciel ， Paramètres du micrologiciel ISP "
"Paramètres du micrologiciel .\n"
" */\n"
"int IMP_ISP_Tuning_SetFWFreeze(IMPISPTuningOpsMode mode);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:841
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SaveAllParam(char *path)\n"
" *\n"
" *  sauvegarder ISP Tous les paramètres de débogage du module \n"
" *\n"
" * @param[in] path  Pointeur de paramètre de chemin \n"
" *\n"
" * @retval 0  Pointeur de paramètre de chemin \n"
" * @retval  Pointeur de paramètre de chemin 0  Pointeur de paramètre de "
"chemin ， Pointeur de paramètre de chemin \n"
" *\n"
" * @remark  Enregistrer tout le débogage ISP paramètre. \n"
" *\n"
" * @attention  paramètre. ， paramètre. ISP paramètre. .\n"
" */\n"
"int IMP_ISP_Tuning_SaveAllParam(char *path);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:857
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetISPBypass(IMPISPTuningOpsMode enable)\n"
" *\n"
" * ISP Si le module bypass\n"
" *\n"
" * @param[in] enable  qu'il s'agisse bypass Mode de sortie \n"
" *\n"
" * @retval 0  Mode de sortie \n"
" * @retval  Mode de sortie 0  Mode de sortie ， Mode de sortie \n"
" *\n"
" * @remark  Mode de sortie \n"
" *\n"
" * @attention  Mode de sortie ， Mode de sortie ISP Le module est fermé .\n"
" */\n"
"int IMP_ISP_Tuning_SetISPBypass(IMPISPTuningOpsMode enable);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:871
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetTotalGain(uint32_t *gain)\n"
" *\n"
" *  Le module est fermé ISP La valeur de gain globale de l'image de sortie "
"\n"
" *\n"
" * @param[in] gain  Obtenez le pointeur du paramètre de valeur de gain , Le "
"format de stockage des données est [24.8]， haut 24bit Est un entier ， faible "
"8bit Est un décimal. \n"
" *\n"
" * @retval 0  Est un décimal. \n"
" * @retval  Est un décimal. 0  Est un décimal. ， Est un décimal. \n"
" *\n"
" * @attention  Est un décimal. ， Est un décimal. IMP_ISP_EnableSensor  Est "
"un décimal.  IMP_ISP_EnableTuning Est un décimal. \n"
" */\n"
"int IMP_ISP_Tuning_GetTotalGain(uint32_t *gain);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:885
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  Est un décimal. ISP Si la fonction d'effet de miroir d'image est activée "
"\n"
" *\n"
" * @fn int IMP_ISP_Tuning_SetISPHflip(IMPISPTuningOpsMode mode)\n"
" *\n"
" * @param[in] mode  Activer ou non l'effet miroir \n"
" *\n"
" * @retval 0  Activer ou non l'effet miroir \n"
" * @retval  Activer ou non l'effet miroir 0  Activer ou non l'effet miroir ， "
"Activer ou non l'effet miroir \n"
" *\n"
" * @attention  Activer ou non l'effet miroir ，IMP_ISP_EnableTuning Activer "
"ou non l'effet miroir \n"
" */\n"
"int IMP_ISP_Tuning_SetISPHflip(IMPISPTuningOpsMode mode);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:899
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetISPHflip(IMPISPTuningOpsMode *pmode)\n"
" *\n"
" *  Activer ou non l'effet miroir ISP L'état de fonctionnement de la "
"fonction d'effet de miroir d'image \n"
" *\n"
" * @param[in] pmode  Pointeur de paramètre d'opération \n"
" *\n"
" * @retval 0  Pointeur de paramètre d'opération \n"
" * @retval  Pointeur de paramètre d'opération 0  Pointeur de paramètre "
"d'opération ， Pointeur de paramètre d'opération \n"
" *\n"
" * @attention  Pointeur de paramètre d'opération ，IMP_ISP_EnableTuning "
"Pointeur de paramètre d'opération \n"
" */\n"
"int IMP_ISP_Tuning_GetISPHflip(IMPISPTuningOpsMode *pmode);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:913
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetISPVflip(IMPISPTuningOpsMode mode)\n"
" *\n"
" *  Pointeur de paramètre d'opération ISP Si la fonction d'effet d'image à "
"l'envers est activée \n"
" *\n"
" * @param[in] mode  Activer ou non l'image inversée de haut en bas \n"
" *\n"
" * @retval 0  Activer ou non l'image inversée de haut en bas \n"
" * @retval  Activer ou non l'image inversée de haut en bas 0  Activer ou non "
"l'image inversée de haut en bas ， Activer ou non l'image inversée de haut en "
"bas \n"
" *\n"
" * @attention  Activer ou non l'image inversée de haut en bas "
"，IMP_ISP_EnableTuning Activer ou non l'image inversée de haut en bas \n"
" */\n"
"int IMP_ISP_Tuning_SetISPVflip(IMPISPTuningOpsMode mode);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:927
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetISPVflip(IMPISPTuningOpsMode *pmode)\n"
" *\n"
" *  Activer ou non l'image inversée de haut en bas ISP L'état de "
"fonctionnement de l'image de haut en bas de la fonction d'effet inverse \n"
" *\n"
" * @param[in] pmode  L'état de fonctionnement de l'image de haut en bas de "
"la fonction d'effet inverse \n"
" *\n"
" * @retval 0  L'état de fonctionnement de l'image de haut en bas de la "
"fonction d'effet inverse \n"
" * @retval  L'état de fonctionnement de l'image de haut en bas de la "
"fonction d'effet inverse 0  L'état de fonctionnement de l'image de haut en "
"bas de la fonction d'effet inverse ， L'état de fonctionnement de l'image de "
"haut en bas de la fonction d'effet inverse \n"
" *\n"
" * @attention  L'état de fonctionnement de l'image de haut en bas de la "
"fonction d'effet inverse ，IMP_ISP_EnableTuning L'état de fonctionnement de "
"l'image de haut en bas de la fonction d'effet inverse \n"
" */\n"
"int IMP_ISP_Tuning_GetISPVflip(IMPISPTuningOpsMode *pmode);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:936
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * ISP  Configuration du mode de travail ， Mode normal ou mode de vision "
"nocturne. \n"
" */\n"
"typedef enum {\n"
"\tIMPISP_RUNNING_MODE_DAY = 0,\t\t\t\t/**<  Mode normal  */\n"
"\tIMPISP_RUNNING_MODE_NIGHT = 1,\t\t\t\t/**<  Mode vision nocturne  */\n"
"\tIMPISP_RUNNING_MODE_BUTT,\t\t\t\t\t/**<  Max  */\n"
"} IMPISPRunningMode;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:967
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetISPRunningMode(IMPISPRunningMode mode)\n"
" *\n"
" *  Max ISP Mode de fonctionnement ， Mode normal ou mode de vision nocturne; "
"le mode par défaut est le mode normal. \n"
" *\n"
" * @param[in] mode Paramètres du mode de fonctionnement \n"
" *\n"
" * @retval 0  Paramètres du mode de fonctionnement \n"
" * @retval  Paramètres du mode de fonctionnement 0  Paramètres du mode de "
"fonctionnement ， Paramètres du mode de fonctionnement \n"
" *\n"
" *  Exemple: \n"
" * @code\n"
" * IMPISPRunningMode mode;\n"
" *\n"
" *\tif( it is during a night now){\n"
"\t\tmode = IMPISP_RUNNING_MODE_NIGHT\n"
"\t}else{\n"
"\t\tmode = IMPISP_RUNNING_MODE_DAY;\n"
"\t}\n"
"\tret = IMP_ISP_Tuning_SetISPRunningMode(mode);\n"
"\tif(ret){\n"
"\t\tIMP_LOG_ERR(TAG, \"IMP_ISP_Tuning_SetISPRunningMode error !\\n\");\n"
"\t\treturn -1;\n"
"\t}\n"
" *\n"
" * @endcode\n"
" *\n"
" * @attention  Exemple: ，IMP_ISP_EnableTuning Exemple: \n"
" */\n"
"int IMP_ISP_Tuning_SetISPRunningMode(IMPISPRunningMode mode);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:981
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetISPRunningMode(IMPISPRunningMode *pmode)\n"
" *\n"
" *  Exemple: ISP Exemple: ， Exemple: \n"
" *\n"
" * @param[in] pmode Exemple: \n"
" *\n"
" * @retval 0  Exemple: \n"
" * @retval  Exemple: 0  Exemple: ， Exemple: \n"
" *\n"
" * @attention  Exemple: ，IMP_ISP_EnableTuning Exemple: \n"
" */\n"
"int IMP_ISP_Tuning_GetISPRunningMode(IMPISPRunningMode *pmode);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:990
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * ISP  Configuration de la stratégie d'exposition automatique ， Mode normal "
"ou mode de priorité d'exposition. \n"
" **/\n"
"typedef enum {\n"
"\tIMPISP_AE_STRATEGY_SPLIT_BALANCED = 0,              /**<  Mode normal ou "
"mode de priorité d'exposition.  */\n"
"\tIMPISP_AE_STRATEGY_SPLIT_INTEGRATION_PRIORITY = 1,      /**<  Mode de "
"priorité d'exposition  */\n"
"\tIMPISP_AE_STRATEGY_BUTT,                    /**<  Mode de priorité "
"d'exposition  */\n"
"} IMPISPAeStrategy;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1020
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetAeStrategy(IMPISPAeStrategy strategy)\n"
" *\n"
" *  Mode de priorité d'exposition ISP Mode de priorité d'exposition ， Mode "
"de priorité d'exposition ， Mode normal ou mode de priorité d'exposition; le "
"mode par défaut est le mode normal. \n"
" *\n"
" * @param[in] strategy  Paramètres de stratégie d'exposition automatique \n"
" *\n"
" * @retval 0  Paramètres de stratégie d'exposition automatique \n"
" * @retval  Paramètres de stratégie d'exposition automatique 0  Paramètres "
"de stratégie d'exposition automatique ， Paramètres de stratégie d'exposition "
"automatique \n"
" *  Paramètres de stratégie d'exposition automatique \n"
" * @code\n"
" * IMPISPAeStrategy strategy;\n"
" *\n"
" *  if( it is a normal scence){\n"
"\t\tmode = IMPISP_AE_STRATEGY_SPLIT_BALANCED\n"
"\t }else{\n"
"\t\tmode = IMPISP_AE_STRATEGY_SPLIT_INTEGRATION_PRIORITY;\n"
"     }\n"
"\t ret = IMP_ISP_Tuning_SetAeStrategy(strategy);\n"
"\tif(ret){\n"
"\tIMP_LOG_ERR(TAG, \"IMP_ISP_Tuning_SetAeStrategy error !\\n\");\n"
"\treturn -1;\n"
"\t}\n"
"*\n"
"* @endcode\n"
"*\n"
"* @attention  Paramètres de stratégie d'exposition automatique "
"，IMP_ISP_EnableTuning Paramètres de stratégie d'exposition automatique \n"
"*/\n"
"int IMP_ISP_Tuning_SetAeStrategy(IMPISPAeStrategy strategy);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1033
#, markdown-text, no-wrap
msgid ""
"/**\n"
"* @fn int IMP_ISP_Tuning_GetAeStrategy(IMPISPAeStrategy *pstrategy)\n"
"*\n"
"*  Paramètres de stratégie d'exposition automatique ISP Paramètres de "
"stratégie d'exposition automatique ， Paramètres de stratégie d'exposition "
"automatique \n"
"* @param[in] pstrategy  Pointeur de paramètre de stratégie d'exposition "
"automatique \n"
"*\n"
"* @retval 0  Pointeur de paramètre de stratégie d'exposition automatique \n"
"* @retval  Pointeur de paramètre de stratégie d'exposition automatique 0  "
"Pointeur de paramètre de stratégie d'exposition automatique ， Pointeur de "
"paramètre de stratégie d'exposition automatique \n"
"*\n"
"* @attention  Pointeur de paramètre de stratégie d'exposition automatique "
"，IMP_ISP_EnableTuning Pointeur de paramètre de stratégie d'exposition "
"automatique \n"
"*/\n"
"int IMP_ISP_Tuning_GetAeStrategy(IMPISPAeStrategy *pstrategy);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1040
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * gamma\n"
" */\n"
"typedef struct {\n"
"\tuint16_t gamma[129];\t\t/**< gamma Tableau de paramètres ， Ont 129 Points  "
"*/\n"
"} IMPISPGamma;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1053
#, markdown-text, no-wrap
msgid ""
"/**\n"
"* @fn int IMP_ISP_Tuning_SetGamma(IMPISPGamma *gamma)\n"
"*\n"
"*  Points GAMMA paramètre .\n"
"* @param[in] gamma gamma paramètre \n"
"*\n"
"* @retval 0  paramètre \n"
"* @retval  paramètre 0  paramètre ， paramètre \n"
"*\n"
"* @attention  paramètre ，IMP_ISP_EnableTuning paramètre \n"
"*/\n"
"int IMP_ISP_Tuning_SetGamma(IMPISPGamma *gamma);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1066
#, markdown-text, no-wrap
msgid ""
"/**\n"
"* @fn int IMP_ISP_Tuning_GetGamma(IMPISPGamma *gamma)\n"
"*\n"
"*  paramètre GAMMA paramètre .\n"
"* @param[out] gamma gamma paramètre \n"
"*\n"
"* @retval 0  paramètre \n"
"* @retval  paramètre 0  paramètre ， paramètre \n"
"*\n"
"* @attention  paramètre ，IMP_ISP_EnableTuning paramètre \n"
"*/\n"
"int IMP_ISP_Tuning_GetGamma(IMPISPGamma *gamma);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1079
#, markdown-text, no-wrap
msgid ""
"/**\n"
"* @fn int IMP_ISP_Tuning_SetAeComp(int comp)\n"
"*\n"
"*  paramètre AE se réconcilier. AE Les paramètres de compensation peuvent "
"ajuster l'image AE target， La plage de réglage recommandée est [90-150].\n"
"* @param[in] comp AE Paramètre de compensation \n"
"*\n"
"* @retval 0  Paramètre de compensation \n"
"* @retval  Paramètre de compensation 0  Paramètre de compensation ， "
"Paramètre de compensation \n"
"*\n"
"* @attention  Paramètre de compensation ，IMP_ISP_EnableTuning Paramètre de "
"compensation \n"
"*/\n"
"int IMP_ISP_Tuning_SetAeComp(int comp);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1092
#, markdown-text, no-wrap
msgid ""
"/**\n"
"* @fn int IMP_ISP_Tuning_GetAeComp(int *comp)\n"
"*\n"
"*  Paramètre de compensation AE Paramètre de compensation \n"
"* @param[out] comp AE Paramètre de compensation \n"
"*\n"
"* @retval 0  Paramètre de compensation \n"
"* @retval  Paramètre de compensation 0  Paramètre de compensation ， "
"Paramètre de compensation \n"
"*\n"
"* @attention  Paramètre de compensation ，IMP_ISP_EnableTuning Paramètre de "
"compensation \n"
"*/\n"
"int IMP_ISP_Tuning_GetAeComp(int *comp);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1100
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  Mode d'exposition \n"
" */\n"
"enum isp_core_expr_mode {\n"
"\tISP_CORE_EXPR_MODE_AUTO,\t\t\t/**<  Mode d'exposition  */\n"
"\tISP_CORE_EXPR_MODE_MANUAL,\t\t\t/**<  Mode manuel  */\n"
"};\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1108
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  Unité d'exposition \n"
" */\n"
"enum isp_core_expr_unit {\n"
"\tISP_CORE_EXPR_UNIT_LINE,\t\t\t/**<  Rangée  */\n"
"\tISP_CORE_EXPR_UNIT_US,\t\t\t\t/**<  milliseconde  */\n"
"};\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1126
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  Paramètres d'exposition \n"
" */\n"
"typedef union isp_core_expr_attr{\n"
"\tstruct {\n"
"\t\tenum isp_core_expr_mode mode;\t\t/**<  Définir le mode d'exposition  "
"*/\n"
"\t\tenum isp_core_expr_unit unit;\t\t/**<  Définir l'unité d'exposition  "
"*/\n"
"\t\tuint16_t time;\n"
"\t} s_attr;\n"
"\tstruct {\n"
"\t\tenum isp_core_expr_mode mode;\t\t\t/**<  Mode d'exposition acquis  */\n"
"\t\tuint16_t integration_time;\t\t/**<  Délai d'exposition ， L'unité est la "
"ligne  */\n"
"\t\tuint16_t integration_time_min;\t/**<  Temps d'exposition minimum obtenu "
"， Temps d'exposition minimum obtenu  */\n"
"\t\tuint16_t integration_time_max;\t/**<  Temps d'exposition maximal obtenu "
"， Temps d'exposition maximal obtenu  */\n"
"\t\tuint16_t one_line_expr_in_us;\t\t/**<  Le nombre de microsecondes "
"correspondant au temps d'exposition d'une ligne  */\n"
"\t} g_attr;\n"
"}IMPISPExpr;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1141
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetExpr(IMPISPExpr *expr)\n"
" *\n"
" *  Le nombre de microsecondes correspondant au temps d'exposition d'une "
"ligne AE Le nombre de microsecondes correspondant au temps d'exposition "
"d'une ligne \n"
" *\n"
" * @param[in] expr AE Le nombre de microsecondes correspondant au temps "
"d'exposition d'une ligne \n"
" *\n"
" * @retval 0  Le nombre de microsecondes correspondant au temps d'exposition "
"d'une ligne \n"
" * @retval  Le nombre de microsecondes correspondant au temps d'exposition "
"d'une ligne 0  Le nombre de microsecondes correspondant au temps "
"d'exposition d'une ligne ， Le nombre de microsecondes correspondant au temps "
"d'exposition d'une ligne \n"
" *\n"
" * @attention  Le nombre de microsecondes correspondant au temps "
"d'exposition d'une ligne ，IMP_ISP_EnableTuning Le nombre de microsecondes "
"correspondant au temps d'exposition d'une ligne \n"
" */\n"
"int IMP_ISP_Tuning_SetExpr(IMPISPExpr *expr);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1155
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetExpr(IMPISPExpr *expr)\n"
" *\n"
" *  Le nombre de microsecondes correspondant au temps d'exposition d'une "
"ligne AE Le nombre de microsecondes correspondant au temps d'exposition "
"d'une ligne \n"
" *\n"
" * @param[out] expr AE Le nombre de microsecondes correspondant au temps "
"d'exposition d'une ligne \n"
" *\n"
" * @retval 0  Le nombre de microsecondes correspondant au temps d'exposition "
"d'une ligne \n"
" * @retval  Le nombre de microsecondes correspondant au temps d'exposition "
"d'une ligne 0  Le nombre de microsecondes correspondant au temps "
"d'exposition d'une ligne ， Le nombre de microsecondes correspondant au temps "
"d'exposition d'une ligne \n"
" *\n"
" * @attention  Le nombre de microsecondes correspondant au temps "
"d'exposition d'une ligne ，IMP_ISP_EnableTuning Le nombre de microsecondes "
"correspondant au temps d'exposition d'une ligne \n"
" */\n"
"int IMP_ISP_Tuning_GetExpr(IMPISPExpr *expr);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1168
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  Sélection de la zone des statistiques d'exposition \n"
" */\n"
"typedef union isp_core_ae_roi_select{\n"
"\tstruct {\n"
"\t\tunsigned endy :8;                   /**<  Point final y coordonner  (0 ~ "
"255)*/\n"
"\t\tunsigned endx :8;                   /**<  coordonner x coordonner  (0 ~ "
"255)*/\n"
"\t\tunsigned starty :8;                 /**<  Point de départ y Point de "
"départ  (0 ~ 255)*/\n"
"\t\tunsigned startx :8;                 /**<  Point de départ x Point de "
"départ  (0 ~ 255)*/\n"
"\t};\n"
"\tuint32_t value;\n"
"} IMPISPAERoi;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1182
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_AE_GetROI(IMPISPAERoi *isp_ae_roi)\n"
" *\n"
" *  Point de départ AE Zone de statistiques. \n"
" *\n"
" * @param[out] isp_ae_roi AE Paramètres de zone statistique "
"rectangulaire. \n"
" *\n"
" * @retval 0  Paramètres de zone statistique rectangulaire. \n"
" * @retval  Paramètres de zone statistique rectangulaire. 0  Paramètres de "
"zone statistique rectangulaire. ， Paramètres de zone statistique "
"rectangulaire. \n"
" *\n"
" * @attention  Paramètres de zone statistique "
"rectangulaire. ，IMP_ISP_EnableTuning Paramètres de zone statistique "
"rectangulaire. \n"
" */\n"
"int IMP_ISP_Tuning_AE_GetROI(IMPISPAERoi *isp_ae_roi);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1196
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_AE_SetROI(IMPISPAERoi *isp_ae_roi)\n"
" *\n"
" *  Paramètres de zone statistique rectangulaire. AE Paramètres de zone "
"statistique rectangulaire. \n"
" *\n"
" * @param[in] isp_ae_roi AE Paramètres de zone statistique rectangulaire. \n"
" *\n"
" * @retval 0  Paramètres de zone statistique rectangulaire. \n"
" * @retval  Paramètres de zone statistique rectangulaire. 0  Paramètres de "
"zone statistique rectangulaire. ， Paramètres de zone statistique "
"rectangulaire. \n"
" *\n"
" * @attention  Paramètres de zone statistique "
"rectangulaire. ，IMP_ISP_EnableTuning Paramètres de zone statistique "
"rectangulaire. \n"
" */\n"
"int IMP_ISP_Tuning_AE_SetROI(IMPISPAERoi *isp_ae_roi);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1211
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  Mode de balance des blancs \n"
" */\n"
"enum isp_core_wb_mode {\n"
"\tISP_CORE_WB_MODE_AUTO = 0,\t\t\t/**<  Mode de balance des blancs  */\n"
"\tISP_CORE_WB_MODE_MANUAL,\t\t\t/**<  Mode de balance des blancs  */\n"
"\tISP_CORE_WB_MODE_DAY_LIGHT,\t\t\t/**<  journée ensoleillée  */\n"
"\tISP_CORE_WB_MODE_CLOUDY,\t\t\t/**<  temps nuageux  */\n"
"\tISP_CORE_WB_MODE_INCANDESCENT,\t\t/**<  Lampe à incandescence  */\n"
"\tISP_CORE_WB_MODE_FLOURESCENT,\t\t/**<  Lampe fluorescente  */\n"
"\tISP_CORE_WB_MODE_TWILIGHT,\t\t\t/**<  crépuscule  */\n"
"\tISP_CORE_WB_MODE_SHADE,\t\t\t\t/**<  ombre  */\n"
"\tISP_CORE_WB_MODE_WARM_FLOURESCENT,\t/**<  Lampe fluorescente chaude  */\n"
"};\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1220
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  Paramètres de balance des blancs \n"
" */\n"
"typedef struct isp_core_wb_attr{\n"
"\tenum isp_core_wb_mode mode;\t\t/**<  Paramètres de balance des blancs ， "
"Divisé en modes automatique et manuel  */\n"
"\tuint16_t rgain;\t\t\t/**<  Gain rouge ， Efficace en mode manuel  */\n"
"\tuint16_t bgain;\t\t\t/**<  Gain bleu ， Gain bleu  */\n"
"}IMPISPWB;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1234
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetWB(IMPISPWB *wb)\n"
" *\n"
" *  Définissez les paramètres de la fonction de balance des blancs. Peut "
"définir le mode automatique et manuel ， Le mode manuel est principalement "
"défini par rgain [[[ bgain atteindre. \n"
" *\n"
" * @param[in] wb  Réglez les paramètres de balance des blancs. \n"
" *\n"
" * @retval 0  Réglez les paramètres de balance des blancs. \n"
" * @retval  Réglez les paramètres de balance des blancs. 0  Réglez les "
"paramètres de balance des blancs. ， Réglez les paramètres de balance des "
"blancs. \n"
" *\n"
" * @attention  Réglez les paramètres de balance des "
"blancs. ，IMP_ISP_EnableTuning Réglez les paramètres de balance des "
"blancs. \n"
" */\n"
"int IMP_ISP_Tuning_SetWB(IMPISPWB *wb);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1248
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetWB(IMPISPWB *wb)\n"
" *\n"
" *  Obtenez le réglage de la fonction de balance des blancs. \n"
" *\n"
" * @param[out] wb  Les paramètres de balance des blancs obtenus. \n"
" *\n"
" * @retval 0  Les paramètres de balance des blancs obtenus. \n"
" * @retval  Les paramètres de balance des blancs obtenus. 0  Les paramètres "
"de balance des blancs obtenus. ， Les paramètres de balance des blancs "
"obtenus. \n"
" *\n"
" * @attention  Les paramètres de balance des blancs "
"obtenus. ，IMP_ISP_EnableTuning Les paramètres de balance des blancs "
"obtenus. \n"
" */\n"
"int IMP_ISP_Tuning_GetWB(IMPISPWB *wb);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1262
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn IMP_ISP_Tuning_GetWB_Statis(IMPISPWB *wb)\n"
" *\n"
" *  Obtenez des statistiques de balance des blancs. \n"
" *\n"
" * @param[out] wb  Les statistiques de balance des blancs obtenues. \n"
" *\n"
" * @retval 0  Les statistiques de balance des blancs obtenues. \n"
" * @retval  Les statistiques de balance des blancs obtenues. 0  Les "
"statistiques de balance des blancs obtenues. ， Les statistiques de balance "
"des blancs obtenues. \n"
" *\n"
" * @attention  Les statistiques de balance des blancs "
"obtenues. ，IMP_ISP_EnableTuning Les statistiques de balance des blancs "
"obtenues. \n"
" */\n"
"int IMP_ISP_Tuning_GetWB_Statis(IMPISPWB *wb);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1276
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_Awb_GetCwfShift(IMPISPWB* isp_wb_attr)\n"
" *\n"
" *  Les statistiques de balance des blancs obtenues. ISP Les statistiques de "
"balance des blancs obtenues. AWB de CWF La position de la source lumineuse "
"\n"
" *\n"
" * @param[out] isp_wb_attr CWF Coordonnées de la position de la source "
"lumineuse \n"
" *\n"
" * @retval 0  Coordonnées de la position de la source lumineuse \n"
" * @retval  Coordonnées de la position de la source lumineuse 0  Coordonnées "
"de la position de la source lumineuse ， Coordonnées de la position de la "
"source lumineuse \n"
" *\n"
" * @attention  Coordonnées de la position de la source lumineuse "
"，IMP_ISP_EnableTuning Coordonnées de la position de la source lumineuse \n"
" */\n"
"int IMP_ISP_Tuning_Awb_GetCwfShift(IMPISPWB *isp_wb_attr);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1303
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_Awb_SetCwfShift(IMPISPWB *isp_wb_attr)\n"
" *\n"
" *  Coordonnées de la position de la source lumineuse ISP Coordonnées de la "
"position de la source lumineuse AWB Coordonnées de la position de la source "
"lumineuse CWF Coordonnées de la position de la source lumineuse \n"
" *\n"
" * @param[in] isp_wb_attr CWF Coordonnées de la position de la source "
"lumineuse \n"
" *\n"
" * @retval 0  Coordonnées de la position de la source lumineuse \n"
" * @retval  Coordonnées de la position de la source lumineuse 0  Coordonnées "
"de la position de la source lumineuse ， Coordonnées de la position de la "
"source lumineuse \n"
" *  Coordonnées de la position de la source lumineuse \n"
" * @code\n"
" * IMPISPWB isp_wb_attr;\n"
" *\n"
" *isp_wb_attr.rgain = x;\n"
" *isp_wb_attr.bgain = y;\n"
" *IMP_ISP_Tuning_Awb_SetCwfShift(isp_wb_attr);\n"
" if(ret){\n"
" IMP_LOG_ERR(TAG, \"IMP_ISP_Tuning_Awb_SetCwfShift error !\\n\");\n"
" return -1;\n"
" }\n"
" *\n"
" * @endcode\n"
" *\n"
" * @attention  Coordonnées de la position de la source lumineuse "
"，IMP_ISP_EnableTuning Coordonnées de la position de la source lumineuse \n"
" */\n"
"int IMP_ISP_Tuning_Awb_SetCwfShift(IMPISPWB *isp_wb_attr);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1317
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetMaxAgain(uint32_t gain)\n"
" *\n"
" *  Coordonnées de la position de la source lumineuse sensor Vous pouvez "
"définir le maximum Again . \n"
" *\n"
" * @param[in] gain sensor Le maximum qui peut être défini again.0 Moyens "
"1x，32 Moyens 2x， Etc. \n"
" *\n"
" * @retval 0  Etc. \n"
" * @retval  Etc. 0  Etc. ， Etc. \n"
" *\n"
" * @attention  Etc. ，IMP_ISP_EnableTuning Etc. \n"
" */\n"
"int IMP_ISP_Tuning_SetMaxAgain(uint32_t gain);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1331
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetMaxAgain(uint32_t *gain)\n"
" *\n"
" *  Etc. sensor Etc. Again Etc. \n"
" *\n"
" * @param[out] gain sensor Etc. again.0 Etc. 1x，32 Etc. 2x， Etc. \n"
" *\n"
" * @retval 0  Etc. \n"
" * @retval  Etc. 0  Etc. ， Etc. \n"
" *\n"
" * @attention  Etc. ，IMP_ISP_EnableTuning Etc. \n"
" */\n"
"int IMP_ISP_Tuning_GetMaxAgain(uint32_t *gain);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1345
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetMaxDgain(uint32_t gain)\n"
" *\n"
" *  Etc. ISP Etc. Dgain Etc. \n"
" *\n"
" * @param[in] ISP Dgain  Etc. dgain.0 Etc. 1x，32 Etc. 2x， Etc. \n"
" *\n"
" * @retval 0  Etc. \n"
" * @retval  Etc. 0  Etc. ， Etc. \n"
" *\n"
" * @attention  Etc. ，IMP_ISP_EnableTuning Etc. \n"
" */\n"
"int IMP_ISP_Tuning_SetMaxDgain(uint32_t gain);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1359
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_GetMaxDgain(uint32_t *gain)\n"
" *\n"
" *  Etc. ISP Définir le maximum Dgain Définir le maximum \n"
" *\n"
" * @param[out] ISP Dgain  Peut obtenir le plus grand ensemble dgain.0 Peut "
"obtenir le plus grand ensemble 1x，32 Peut obtenir le plus grand ensemble 2x， "
"Peut obtenir le plus grand ensemble \n"
" *\n"
" * @retval 0  Peut obtenir le plus grand ensemble \n"
" * @retval  Peut obtenir le plus grand ensemble 0  Peut obtenir le plus "
"grand ensemble ， Peut obtenir le plus grand ensemble \n"
" *\n"
" * @attention  Peut obtenir le plus grand ensemble ，IMP_ISP_EnableTuning "
"Peut obtenir le plus grand ensemble \n"
" */\n"
"int IMP_ISP_Tuning_GetMaxDgain(uint32_t *gain);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1373
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetVideoDrop(void (*cb)(void))\n"
" *\n"
" *  Réglez la fonction de perte vidéo. Quand il apparaît sensor En cas de "
"problème avec le circuit de connexion ， La fonction de rappel définie sera "
"exécutée. \n"
" *\n"
" * @param[in] cb  Rappeler. \n"
" *\n"
" * @retval 0  Rappeler. \n"
" * @retval  Rappeler. 0  Rappeler. ， Rappeler. \n"
" *\n"
" * @attention  Rappeler. ，IMP_ISP_EnableTuning Rappeler. \n"
" */\n"
"int IMP_ISP_Tuning_SetVideoDrop(void (*cb)(void));\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1387
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetHiLightDepress(uint32_t strength)\n"
" *\n"
" *  Réglez l'intensité de la forte suppression de la lumière. \n"
" *\n"
" * @param[in] strength  Paramètre d'intensité de suppression de la lumière "
"forte . La plage de valeurs est [ 0-10], 0 Indique que la fonction est "
"désactivée. \n"
" *\n"
" * @retval 0  Indique que la fonction est désactivée. \n"
" * @retval  Indique que la fonction est désactivée. 0  Indique que la "
"fonction est désactivée. ， Indique que la fonction est désactivée. \n"
" *\n"
" * @attention  Indique que la fonction est désactivée. ，IMP_ISP_EnableTuning "
"Indique que la fonction est désactivée. \n"
" */\n"
"int IMP_ISP_Tuning_SetHiLightDepress(uint32_t strength);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1401
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetTemperStrength(uint32_t ratio)\n"
" *\n"
" *  Indique que la fonction est désactivée. 3D Intensité de la réduction du "
"bruit. \n"
" *\n"
" * @param[in] ratio  Rapport d'ajustement d'intensité . Si défini sur 90 "
"Cela signifie qu'il est défini sur la valeur par défaut 90%. Cela signifie "
"qu'il est défini sur la valeur par défaut 50-150].\n"
" *\n"
" * @retval 0  Cela signifie qu'il est défini sur la valeur par défaut \n"
" * @retval  Cela signifie qu'il est défini sur la valeur par défaut 0  Cela "
"signifie qu'il est défini sur la valeur par défaut ， Cela signifie qu'il est "
"défini sur la valeur par défaut \n"
" *\n"
" * @attention  Cela signifie qu'il est défini sur la valeur par défaut "
"，IMP_ISP_EnableTuning Cela signifie qu'il est défini sur la valeur par "
"défaut \n"
" */\n"
"int IMP_ISP_Tuning_SetTemperStrength(uint32_t ratio);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1415
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetSinterStrength(uint32_t ratio)\n"
" *\n"
" *  Cela signifie qu'il est défini sur la valeur par défaut 2D Cela signifie "
"qu'il est défini sur la valeur par défaut \n"
" *\n"
" * @param[in] ratio  Cela signifie qu'il est défini sur la valeur par défaut "
". Cela signifie qu'il est défini sur la valeur par défaut 90 Cela signifie "
"qu'il est défini sur la valeur par défaut 90%. Cela signifie qu'il est "
"défini sur la valeur par défaut 50-150].\n"
" *\n"
" * @retval 0  Cela signifie qu'il est défini sur la valeur par défaut \n"
" * @retval  Cela signifie qu'il est défini sur la valeur par défaut 0  Cela "
"signifie qu'il est défini sur la valeur par défaut ， Cela signifie qu'il est "
"défini sur la valeur par défaut \n"
" *\n"
" * @attention  Cela signifie qu'il est défini sur la valeur par défaut "
"，IMP_ISP_EnableTuning Cela signifie qu'il est défini sur la valeur par "
"défaut \n"
" */\n"
"int IMP_ISP_Tuning_SetSinterStrength(uint32_t ratio);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1429
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @fn int IMP_ISP_Tuning_SetDPStrength(uint32_t ratio)\n"
" *\n"
" *  Cela signifie qu'il est défini sur la valeur par défaut DPC force. \n"
" *\n"
" * @param[in] ratio  force. . force. 90 force. 90%. force. 50-150].\n"
" *\n"
" * @retval 0  force. \n"
" * @retval  force. 0  force. ， force. \n"
" *\n"
" * @attention  force. ，IMP_ISP_EnableTuning force. \n"
" */\n"
"int IMP_ISP_Tuning_SetDPStrength(uint32_t ratio);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1439
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * ISP ANTIFOG  Mode de fonctionnement. \n"
" */\n"
"typedef enum {\n"
"\tANTIFOG_DISABLE,\t\t\t/**<  Mode de fonctionnement.  */\n"
"\tANTIFOG_STRONG,\t\t\t\t/**<  Fort  */\n"
"\tANTIFOG_MEDIUM,\t\t\t\t/**<  Fort  */\n"
"\tANTIFOG_WEAK,\t\t\t\t/**<  faible  */\n"
"}IMPISPAntiFogAttr;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1452
#, markdown-text, no-wrap
msgid ""
"/**\n"
"* @fn int IMP_ISP_Tuning_SetAntiFogAttr(IMPISPAntiFogAttr attr)\n"
"*\n"
"*  faible ANTIFOG Les attributs. \n"
"* @param[in] attr ANTIFOG Paramètre d'attribut \n"
"*\n"
"* @retval 0  Paramètre d'attribut \n"
"* @retval  Paramètre d'attribut 0  Paramètre d'attribut ， Paramètre "
"d'attribut \n"
"*\n"
"* @attention  Paramètre d'attribut ，IMP_ISP_EnableTuning Paramètre "
"d'attribut \n"
"*/\n"
"int IMP_ISP_Tuning_SetAntiFogAttr(IMPISPAntiFogAttr attr);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1464
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * ISP EV  Paramètre d'attribut \n"
" */\n"
"typedef struct {\n"
"\tuint32_t ev;\t\t\t/**<  Valeur d'exposition  */\n"
"\tuint32_t expr_us;\t\t/**<  Délai d'exposition  */\n"
"\tuint32_t ev_log2;\t\t/**<log Formater le temps d'exposition  */\n"
"\tuint32_t again;\t\t\t/**<  Gain analogique  */\n"
"\tuint32_t dgain;\t\t\t/**<  Gain numérique  */\n"
"\tuint32_t gain_log2;\t\t/**< log Gain de format  */\n"
"}IMPISPEVAttr;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1477
#, markdown-text, no-wrap
msgid ""
"/**\n"
"* @fn int IMP_ISP_Tuning_GetEVAttr(IMPISPEVAttr *attr)\n"
"*\n"
"*  Gain de format EV Gain de format \n"
"* @param[out] attr EV Gain de format \n"
"*\n"
"* @retval 0  Gain de format \n"
"* @retval  Gain de format 0  Gain de format ， Gain de format \n"
"*\n"
"* @attention  Gain de format ，IMP_ISP_EnableTuning Gain de format \n"
"*/\n"
"int IMP_ISP_Tuning_GetEVAttr(IMPISPEVAttr *attr);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1483
#, markdown-text, no-wrap
msgid ""
"#ifdef __cplusplus\n"
"#if __cplusplus\n"
"}\n"
"#endif\n"
"#endif /* __cplusplus */\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1487
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @}\n"
" */\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_isp.h:1488
#, markdown-text, no-wrap
msgid "#endif /* __IMP_ISP_H__ */\n"
msgstr ""
