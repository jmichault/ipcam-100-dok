# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-04 16:42+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: ./includes.fr/imp_ivs.h:6
#, markdown-text, no-wrap
msgid ""
"/*\n"
" * IMP IVS header file.\n"
" *\n"
" * Copyright (C) 2015 Ingenic Semiconductor Co.,Ltd\n"
" */\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:9
#, markdown-text, no-wrap
msgid ""
"#ifndef __IMP_IVS_H__\n"
"#define __IMP_IVS_H__\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:16
#, markdown-text, no-wrap
msgid ""
"#ifdef __cplusplus\n"
"#if __cplusplus\n"
"extern \"C\"\n"
"{\n"
"#endif\n"
"#endif /* __cplusplus */\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:18
#, markdown-text, no-wrap
msgid "#include <imp/imp_common.h>\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:23
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @file\n"
" * IMP IVS Module \n"
" */\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:25
#, markdown-text, no-wrap
msgid "#define IMP_IVS_DEFAULT_TIMEOUTMS\t\t(-1)\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:122
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @defgroup IMP_IVS\n"
" * @ingroup imp\n"
" * @brief IVS Interface universelle d'analyse intelligente API\n"
" *\n"
" * @section concept 1  Concepts associés \n"
" * IMP IVS  par IVS Interface universelle API Appel instancié "
"IMPIVSInterface Pour intégrer des algorithmes d'analyse intelligents dans "
"SDK Analyse entrante SDK milieu frame image. \n"
" *\n"
" * @subsection IMPIVSInterface 1.1 IMPIVSInterface\n"
" * IMPIVSInterface  Interface d'algorithme général ， L'algorithme spécifique "
"implémente cette interface et la transmet à IMP IVS Atteindre à SDK Le but "
"de l'exécution d'algorithmes spécifiques dans. \\n\n"
" *  Une channel Il n'y a et il n'y a qu'un transporteur pour une seule "
"instance d'algorithme ， L'implémentation spécifique de l'interface de "
"l'algorithme général doit être transmise au channel Capacité à SDK Exécutez "
"l'algorithme dans. \t\\n\n"
" * IMPIVSInterface  membre param Fonction membre init Paramètres.  \\n\n"
" * IMP_IVS Sera passé à la fonction membre ProcessAsync Paramétrique frame "
"Verrou externe ，ProcessAsync Doit être épuisé frame Appeler après "
"IMP_IVS_ReleaseData libéré frame， Afin d'éviter une impasse. \n"
" *\n"
" * @section ivs_usage 2  Instructions \n"
" *  Prenons l'exemple de l'algorithme de détection de mouvement ， Voir "
"l'implémentation spécifique de la fonction sample-move_c.c déposer \\n\n"
" * step.1  Initialiser le système ， Vous pouvez appeler directement "
"l'exemple sample_system_init() fonction. \\n\n"
" *  L'application entière ne peut initialiser le système qu'une seule fois ， "
"Si initialisé avant ， Il n'est pas nécessaire de réinitialiser à "
"nouveau. \\n\n"
" * step.2  initialisation framesource \\n\n"
" *  Si l'algorithme utilisé framesource Chaîne créée ， Utilisez simplement "
"le canal créé directement. \\n\n"
" *  Utilisez simplement le canal créé directement. framesource Chaîne non "
"créée ， Vous pouvez appeler le sample_framesource_init(IVS_FS_CHN, "
"&fs_chn_attr) Créez-le. \\n\n"
" * step.3  créer ivs Groupe de canaux d'algorithme spécifique. \\n\n"
" *  Plusieurs algorithmes peuvent partager un groupe de canaux ， Vous pouvez "
"également utiliser des groupes de canaux séparément ， Pièces spécifiques "
"sample_ivs_move_init() \\n\n"
" * @code\n"
" * int sample_ivs_move_init(int grp_num)\n"
" * {\n"
" *  \tint ret = 0;\n"
" *\n"
" *\t\tret = IMP_IVS_CreateGroup(grp_num);\n"
" *\t\tif (ret < 0) {\n"
" *\t\t\tIMP_LOG_ERR(TAG, \"IMP_IVS_CreateGroup(%d) failed\\n\", grp_num);\n"
" *\t\t\treturn -1;\n"
" *\t\t}\n"
" *\t\treturn 0;\n"
" * }\n"
" * @endcode\n"
" * step.4  Lier le groupe de canaux de l'algorithme et framesource Groupe de "
"canaux \n"
" * @code\n"
" *\tIMPCell framesource_cell = {DEV_ID_FS, IVS_FS_CHN, 0};\n"
" *\tIMPCell ivs_cell = {DEV_ID_IVS, 0, 0};\n"
" *\tret = IMP_System_Bind(&framesource_cell, &ivs_cell);\n"
" *\tif (ret < 0) {\n"
" *\t\tIMP_LOG_ERR(TAG, \"Bind FrameSource channel%d and ivs0 failed\\n\", "
"IVS_FS_CHN);\n"
" *\t\treturn -1;\n"
" *\t}\n"
" * @endcode\n"
" * step.5  Commencez framesource Et algorithme. Il est recommandé que le "
"numéro de canal de l'algorithme soit le même ， Pour qu'il puisse "
"correspondre directement à quel algorithme fonctionne actuellement. \n"
" * @code\n"
" *\tIMP_FrameSource_SetFrameDepth(0, 0);\n"
" *\tret = sample_framesource_streamon(IVS_FS_CHN);\n"
" *\tif (ret < 0) {\n"
" *\t\tIMP_LOG_ERR(TAG, \"ImpStreamOn failed\\n\");\n"
" *\t\treturn -1;\n"
" *\t}\n"
" *\tret = sample_ivs_move_start(0, 0, &inteface);\n"
" *\tif (ret < 0) {\n"
" *\t\tIMP_LOG_ERR(TAG, \"sample_ivs_move_start(0, 0) failed\\n\");\n"
" *\t\treturn -1;\n"
" *\t}\n"
" * @endcode\n"
" *\n"
" * step.6  Obtenir les résultats de l'algorithme  \\n\n"
" * Polling Les résultats, les résultats d'acquisition et les résultats de "
"diffusion doivent correspondre strictement ， Pas d'interruption ;\n"
" *  seul Polling Le résultat est renvoyé correctement ， Les résultats "
"obtenus seront mis à jour ， Sinon, les résultats obtenus sont "
"imprévisibles. \n"
" * @code\n"
" *\tfor (i = 0; i < NR_FRAMES_TO_IVS; i++) {\n"
" *\t\tret = IMP_IVS_PollingResult(0, IMP_IVS_DEFAULT_TIMEOUTMS);\n"
" *\t\tif (ret < 0) {\n"
" *\t\t\tIMP_LOG_ERR(TAG, \"IMP_IVS_PollingResult(%d, %d) failed\\n\", 0, "
"IMP_IVS_DEFAULT_TIMEOUTMS);\n"
" *\t\t\treturn -1;\n"
" *\t\t}\n"
" *\t\tret = IMP_IVS_GetResult(0, (void **)&result);\n"
" *\t\tif (ret < 0) {\n"
" *\t\t\tIMP_LOG_ERR(TAG, \"IMP_IVS_GetResult(%d) failed\\n\", 0);\n"
" *\t\t\treturn -1;\n"
" *\t\t}\n"
" *\t\tIMP_LOG_INFO(TAG, \"frame[%d], result->ret=%d\\n\", i, result->ret);\n"
" *\n"
" *\t\tret = IMP_IVS_ReleaseResult(0, (void *)result);\n"
" *\t\tif (ret < 0) {\n"
" *\t\t\tIMP_LOG_ERR(TAG, \"IMP_IVS_ReleaseResult(%d) failed\\n\", 0);\n"
" *\t\t\treturn -1;\n"
" *\t\t}\n"
" *\t}\n"
" * @endcode\n"
" * step.7  Libérer les ressources \n"
" * @code\n"
" *  sample_ivs_move_stop(0, inteface);\n"
" *  sample_framesource_streamoff(1);\n"
" *  IMP_System_UnBind(&framesource_cell, &ivs_cell);\n"
" *  sample_ivs_move_exit(0);\n"
" *  sample_framesource_exit(IVS_FS_CHN);\n"
" *  sample_system_exit();\n"
" * @endcode\n"
" * @{\n"
" */\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:140
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * ivs  Interface commune \n"
" */\n"
"typedef struct {\n"
"\tvoid  *param;                             /**<  Paramètres d'entrée  */\n"
"\tint   paramSize;                          /**<  Taille de l'espace des "
"paramètres  */\n"
"\tIMPPixelFormat pixfmt;                    /**<  L'algorithme nécessite un "
"format de données  */\n"
"\tint  (*init)(void *param);                /**<  Fonction d'initialisation  "
"*/\n"
"\tvoid (*exit)(void);                       /**<  Fonction de déconnexion  "
"*/\n"
"\tint  (*PreprocessSync)(IMPFrameInfo *frame);/**<  Fonction de "
"prétraitement ， valeur de retour: 0->frame Pas free,1->frame Déjà free;-1-> "
"Erreur ,frame Erreur free */\n"
"\tint  (*ProcessAsync)(IMPFrameInfo *frame);/**<  Fonction de traitement , "
"Doit s'assurer que chaque frame Dans free statut , valeur de retour :0-> Le "
"test réel revient normalement ,1-> La détection de saut de trame revient "
"normalement ,-1-> La détection de saut de trame revient normalement  */\n"
"\tint  (*GetResult)(void **result);         /**<  Obtenir des ressources sur "
"les résultats  */\n"
"\tint  (*ReleaseResult)(void *result);      /**<  Libérer les ressources de "
"résultats  */\n"
"\tint\t (*GetParam)(void *param);            /**<  Obtenir les paramètres de "
"l'algorithme  */\n"
"\tint\t (*SetParam)(void *param);            /**<  Définir les paramètres de "
"l'algorithme  */\n"
"\tint\t (*FlushFrame)(void);                 /**<  Libération par "
"l'extérieur ProcessAsync Tous mis en cache après l'entrée dans l'algorithme "
"frame */\n"
"} IMPIVSInterface;\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:156
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  Créer un groupe de canaux \n"
" *\n"
" * @fn int IMP_IVS_CreateGroup(int GrpNum);\n"
" *\n"
" * @param[in] GrpNum IVS Numéro de groupe de canaux correspondant à la "
"fonction \n"
" *\n"
" * @retval 0  Succès \n"
" * @retval -1  échec \n"
" *\n"
" * @remark  non \n"
" *\n"
" * @attention  non \n"
" */\n"
"int IMP_IVS_CreateGroup(int GrpNum);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:189
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  Détruire le groupe de canaux \n"
" *\n"
" * @fn int IMP_IVS_DestroyGroup(int GrpNum);\n"
" *\n"
" * @param[in] GrpNum IVS Détruire le groupe de canaux \n"
" *\n"
" * @retval 0  Détruire le groupe de canaux \n"
" * @retval -1  Détruire le groupe de canaux \n"
" *\n"
" * @remark  Détruire le groupe de canaux \n"
" *\n"
" * @attention  Détruire le groupe de canaux \n"
" */\n"
"int IMP_IVS_DestroyGroup(int GrpNum);\n"
"/**\n"
" *  Détruire le groupe de canaux IVS Fonction canal correspondant \n"
" *\n"
" * @fn int IMP_IVS_CreateChn(int ChnNum, IMPIVSInterface *handler);\n"
" *\n"
" * @param[in] ChnNum  Le numéro de canal \n"
" *\n"
" * @param[in] handler IVS Poignée de fonction \n"
" *\n"
" * @retval 0  Poignée de fonction \n"
" * @retval -1  Poignée de fonction \n"
" *\n"
" * @remark  Poignée de fonction .\n"
" *\n"
" * @attention  Poignée de fonction \n"
" */\n"
"int IMP_IVS_CreateChn(int ChnNum, IMPIVSInterface *handler);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:205
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  détruire IVS Le canal correspondant à la poignée de fonction \n"
" *\n"
" * @fn int IMP_IVS_DestroyChn(int ChnNum);\n"
" *\n"
" * @param[in] ChnNum  Le canal correspondant à la poignée de fonction \n"
" *\n"
" * @retval 0  Le canal correspondant à la poignée de fonction \n"
" * @retval -1  Le canal correspondant à la poignée de fonction \n"
" *\n"
" * @remark  Le canal correspondant à la poignée de fonction \n"
" *\n"
" * @attention  Le canal correspondant à la poignée de fonction \n"
" */\n"
"int IMP_IVS_DestroyChn(int ChnNum);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:223
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  Enregistrer la chaîne dans le groupe de chaînes \n"
" *\n"
" * @fn int IMP_IVS_RegisterChn(int GrpNum, int ChnNum);\n"
" *\n"
" * @param[in] GrpNum IVS Enregistrer la chaîne dans le groupe de chaînes \n"
" *\n"
" * @param[in] ChnNum IVS Numéro de canal correspondant à la fonction \n"
" *\n"
" * @retval 0  Numéro de canal correspondant à la fonction \n"
" * @retval -1  Numéro de canal correspondant à la fonction \n"
" *\n"
" * @remark  Sera numéroté Chnnum Le canal enregistré sous le numéro est "
"Grpnum Groupe de canaux \n"
" *\n"
" * @attention  Groupe de canaux \n"
" */\n"
"int IMP_IVS_RegisterChn(int GrpNum, int ChnNum);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:239
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  Annuler la chaîne du groupe de chaînes \n"
" *\n"
" * @fn int IMP_IVS_UnRegisterChn(int ChnNum);\n"
" *\n"
" * @param[in] ChnNum IVS Annuler la chaîne du groupe de chaînes \n"
" *\n"
" * @retval 0  Annuler la chaîne du groupe de chaînes \n"
" * @retval -1  Annuler la chaîne du groupe de chaînes \n"
" *\n"
" * @remark  Le nombre mineur est Grpnum Le numéro de déconnexion dans le "
"groupe de canaux est Chnnum rayon \n"
" *\n"
" * @attention  rayon \n"
" */\n"
"int IMP_IVS_UnRegisterChn(int ChnNum);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:255
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  La chaîne commence à recevoir des images \n"
" *\n"
" * @fn int IMP_IVS_StartRecvPic(int ChnNum);\n"
" *\n"
" * @param[in] ChnNum  La chaîne commence à recevoir des images \n"
" *\n"
" * @retval 0  La chaîne commence à recevoir des images \n"
" * @retval -1  La chaîne commence à recevoir des images \n"
" *\n"
" * @remark  Le numéro de canal est Chnnum de IVS Le canal de fonction "
"commence à recevoir des images pour une analyse intelligente \n"
" *\n"
" * @attention  Le canal de fonction commence à recevoir des images pour une "
"analyse intelligente \n"
" */\n"
"int IMP_IVS_StartRecvPic(int ChnNum);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:271
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  La chaîne cesse de recevoir des images \n"
" *\n"
" * @fn int IMP_IVS_StopRecvPic(int ChnNum);\n"
" *\n"
" * @param[in] ChnNum  La chaîne cesse de recevoir des images \n"
" *\n"
" * @retval 0  La chaîne cesse de recevoir des images \n"
" * @retval -1  La chaîne cesse de recevoir des images \n"
" *\n"
" * @remark  La chaîne cesse de recevoir des images Chnnum La chaîne cesse de "
"recevoir des images IVS Le canal de fonction cesse de recevoir des images ， "
"Suspendre l'analyse intelligente \n"
" *\n"
" * @attention  Suspendre l'analyse intelligente \n"
" */\n"
"int IMP_IVS_StopRecvPic(int ChnNum);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:289
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  Blocage pour déterminer s'il peut être obtenu IVS Résultat d'analyse "
"intelligent calculé par fonction \n"
" *\n"
" * @fn int IMP_IVS_PollingResult(int ChnNum, int timeoutMs);\n"
" *\n"
" * @param[in] ChnNum IVS Résultat d'analyse intelligent calculé par fonction "
"\n"
" *\n"
" * @param[in] timeout  Temps d'attente maximum ， unité ms; "
"IMP_IVS_DEFAULT_TIMEOUTMS: Temps d'attente par défaut dans la bibliothèque "
",0: N'attends pas ,>0: Temps d'attente défini par l'utilisateur \n"
" *\n"
" * @retval 0  Temps d'attente défini par l'utilisateur \n"
" * @retval -1  Temps d'attente défini par l'utilisateur \n"
" *\n"
" * @remark  Seuls les paramètres lors de la création du canal "
"IMPIVSInterface Structure ProcessAsync Retour du membre de fonction 0 Temps "
"， Autrement dit, lorsque le test réel revient normalement ， ce Polling La "
"fonction renvoie le succès \n"
" *\n"
" * @attention  La fonction renvoie le succès \n"
" */\n"
"int IMP_IVS_PollingResult(int ChnNum, int timeoutMs);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:307
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  obtenir IVS Résultat d'analyse intelligent calculé par fonction \n"
" *\n"
" * @fn int IMP_IVS_GetResult(int ChnNum, void **result);\n"
" *\n"
" * @param[in] ChnNum IVS Résultat d'analyse intelligent calculé par fonction "
"\n"
" *\n"
" * @param[in] result IVS Le résultat de sortie du numéro de canal "
"correspondant à la fonction ， Renvoie le pointeur de résultat de "
"l'algorithme d'analyse intelligente correspondant à ce canal ， Les clients "
"externes n'ont pas besoin d'allouer d'espace. \n"
" *\n"
" * @retval 0  Les clients externes n'ont pas besoin d'allouer d'espace. \n"
" * @retval -1  Les clients externes n'ont pas besoin d'allouer d'espace. \n"
" *\n"
" * @remark  Selon différents IVS Canal lié fonctionnellement , Sortir le "
"résultat correspondant .\n"
" *\n"
" * @attention  Sortir le résultat correspondant \n"
" */\n"
"int IMP_IVS_GetResult(int ChnNum, void **result);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:327
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  Sortir le résultat correspondant IVS Ressource de résultat calculée par "
"fonction \n"
" *\n"
" * @fn int IMP_IVS_ReleaseResult(int ChnNum, void *result);\n"
" *\n"
" * @param[in] GrpNum  Numéro de groupe de canaux \n"
" *\n"
" * @param[in] ChnNum IVS Numéro de groupe de canaux \n"
" *\n"
" * @param[in] result IVS Numéro de groupe de canaux \n"
" *\n"
" * @retval 0  Numéro de groupe de canaux \n"
" * @retval -1  Numéro de groupe de canaux \n"
" *\n"
" * @remark  Numéro de groupe de canaux IVS Numéro de groupe de canaux , "
"Libérer ses ressources de résultat de sortie .\n"
" *\n"
" * @attention  Libérer ses ressources de résultat de sortie \n"
" */\n"
"int IMP_IVS_ReleaseResult(int ChnNum, void *result);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:344
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  Relâchez à Datacallback Paramètres frame\n"
" *\n"
" * @fn int IMP_IVS_ReleaseData(void *vaddr);\n"
" *\n"
" * @param[in] vaddr  Adresse virtuelle de l'espace libéré \n"
" *\n"
" * @retval 0  Adresse virtuelle de l'espace libéré \n"
" * @retval -1  Adresse virtuelle de l'espace libéré \n"
" *\n"
" * @remark  Doit utiliser cette fonction pour libérer la passe à "
"Datacallback Doit utiliser cette fonction pour libérer la passe à frame "
"paramètre ， Sinon, cela entraînera certainement une impasse. \n"
" * @remark  Cette interface est réservée aux fournisseurs d'algorithmes ， "
"Les clients n'ont pas besoin de prêter attention à l'utilisation "
"d'algorithmes. \n"
" *\n"
" * @attention  Les clients n'ont pas besoin de prêter attention à "
"l'utilisation d'algorithmes. \n"
" */\n"
"int IMP_IVS_ReleaseData(void *vaddr);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:359
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  Obtenir les paramètres d'algorithme de canal \n"
" *\n"
" * @fn int IMP_IVS_GetParam(int chnNum, void *param);\n"
" *\n"
" * @param[in] ChnNum IVS Obtenir les paramètres d'algorithme de canal \n"
" * @param[in] param  Pointeur d'adresse virtuelle de paramètre d'algorithme "
"\n"
" *\n"
" * @retval 0  Pointeur d'adresse virtuelle de paramètre d'algorithme \n"
" * @retval -1  Pointeur d'adresse virtuelle de paramètre d'algorithme \n"
" *\n"
" * @attention  Pointeur d'adresse virtuelle de paramètre d'algorithme \n"
" */\n"
"int IMP_IVS_GetParam(int chnNum, void *param);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:374
#, markdown-text, no-wrap
msgid ""
"/**\n"
" *  Définir les paramètres de l'algorithme de canal \n"
" *\n"
" * @fn int IMP_IVS_SetParam(int chnNum, void *param);\n"
" *\n"
" * @param[in] ChnNum IVS Définir les paramètres de l'algorithme de canal \n"
" * @param[in] param  Définir les paramètres de l'algorithme de canal \n"
" *\n"
" * @retval 0  Définir les paramètres de l'algorithme de canal \n"
" * @retval -1  Définir les paramètres de l'algorithme de canal \n"
" *\n"
" * @attention  Définir les paramètres de l'algorithme de canal \n"
" */\n"
"int IMP_IVS_SetParam(int chnNum, void *param);\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:378
#, markdown-text, no-wrap
msgid ""
"/**\n"
" * @}\n"
" */\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:384
#, markdown-text, no-wrap
msgid ""
"#ifdef __cplusplus\n"
"#if __cplusplus\n"
"}\n"
"#endif\n"
"#endif /* __cplusplus */\n"
msgstr ""

#. type: Plain text
#: ./includes.fr/imp_ivs.h:385
#, markdown-text, no-wrap
msgid "#endif /* __IMP_IVS_H__ */\n"
msgstr ""
