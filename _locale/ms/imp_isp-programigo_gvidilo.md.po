# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-04 16:48+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ms\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: ./imp_isp-programigo_gvidilo.md:1
#, markdown-text, no-wrap
#, fuzzy
msgid "IMP_ISP (voir imp_isp.h)"
msgstr "IMP_ISP (voir imp_isp.h)"

#. type: Plain text
#: ./imp_isp-programigo_gvidilo.md:3
#, markdown-text, no-wrap
#, fuzzy
msgid ""
"Bildosigna prilaborado. Ĉefe inkluzivas agordojn de bildaj efikoj, "
"reĝimoŝaltilo kaj registrado, aldono kaj forigo de sensilo.\n"
msgstr "Pemprosesan imej. Terutamanya merangkumi tetapan kesan gambar, pertukaran mod dan rakaman, penambahan dan penghapusan sensor.\n"

#. type: Plain text
#: ./imp_isp-programigo_gvidilo.md:5
#, markdown-text, no-wrap
#, fuzzy
msgid ""
"La ISP-modulo havas nenion komunan kun datuma fluo kaj ne bezonas esti "
"ligita, ĝi nur funkcias laŭ efektagordo kaj sensila kontrolo.\n"
msgstr "Modul ISP tidak ada kaitan dengan aliran data dan tidak perlu dihubungkan, ia hanya berfungsi dari segi konfigurasi kesan dan kawalan sensor.\n"

#. type: Title ##
#: ./imp_isp-programigo_gvidilo.md:6
#, markdown-text, no-wrap
#, fuzzy
msgid "Aktivigo"
msgstr "Pengaktifan"

#. type: Plain text
#: ./imp_isp-programigo_gvidilo.md:10
#, markdown-text, no-wrap
#, fuzzy
msgid ""
"La paŝoj de aktivigo de ISP-modulo estas jenaj:\n"
"* paŝo 1: Kreu ISP-modulon\n"
msgstr "Langkah-langkah untuk mengaktifkan modul ISP adalah seperti berikut:\n* langkah 1: Buat modul ISP\n"

#. type: Fenced code block
#: ./imp_isp-programigo_gvidilo.md:11
#, no-wrap
msgid ""
"int ret = 0;\n"
"  // étape 1 : \n"
"  ret = IMP_ISP_Open (); \n"
"  if (ret <0) {\n"
"    printf (\"Échec de ISPInit\\n\");\n"
"    return -1;\n"
"  }\n"
msgstr ""
"int ret = 0;\n"
"  // étape 1 : \n"
"  ret = IMP_ISP_Open (); \n"
"  if (ret <0) {\n"
"    printf (\"Échec de ISPInit\\n\");\n"
"    return -1;\n"
"  }\n"

#. type: Bullet: '* '
#: ./imp_isp-programigo_gvidilo.md:21
#, markdown-text, no-wrap
#, fuzzy
msgid ""
"2a paŝo: Aldonu sensilon, la sensila pelilo estis aldonita al la kerno antaŭ "
"ĉi tiu operacio.\n"
msgstr "Langkah 2: Tambahkan sensor, pemacu sensor ditambahkan ke kernel sebelum operasi ini.\n"

#. type: Fenced code block
#: ./imp_isp-programigo_gvidilo.md:23
#, no-wrap
msgid ""
"  IMPSensorInfo sensor[2];\n"
"  sensor[0].name = \"xxx\";\n"
"  sensor[0].cbus_type = SENSOR_CONTROL_INTERFACE_I2C; // OU "
"SENSOR_CONTROL_INTERFACE_SPI\n"
"  sensor[0].i2c = {\n"
"    .type = \"xxx\", // nom du périphérique I2C, qui doit être cohérent avec "
"le nom de la structure i2c_device_id dans le pilote du capteur.\n"
"    .addr = xx, // adresse I2C\n"
"    .i2c_adapter_id = xx, // ID du contrôleur I2C où se trouve le capteur\n"
"  }\n"
"  /* OU\n"
"   * sensor[0].spi = {\n"
"   *   .modalias = \"xx\", // nom du périphérique SPI, doit être cohérent "
"avec le nom de la structure spi_device_id dans le pilote du capteur.\n"
"   *     .bus_num = xx, // adresse du bus SPI\n"
"   *}\n"
"   */\n"
"  sensor[1].name[0]=0; // pas d'autre capteur\n"
"  ret = IMP_ISP_AddSensor (& sensor); \n"
"  if (ret <0) {\n"
"    printf (\"Impossible d'enregistrer le capteur \\n\");\n"
"    return -1;\n"
"  }\n"
msgstr ""
"  IMPSensorInfo sensor[2];\n"
"  sensor[0].name = \"xxx\";\n"
"  sensor[0].cbus_type = SENSOR_CONTROL_INTERFACE_I2C; // OU "
"SENSOR_CONTROL_INTERFACE_SPI\n"
"  sensor[0].i2c = {\n"
"    .type = \"xxx\", // nom du périphérique I2C, qui doit être cohérent avec "
"le nom de la structure i2c_device_id dans le pilote du capteur.\n"
"    .addr = xx, // adresse I2C\n"
"    .i2c_adapter_id = xx, // ID du contrôleur I2C où se trouve le capteur\n"
"  }\n"
"  /* OU\n"
"   * sensor[0].spi = {\n"
"   *   .modalias = \"xx\", // nom du périphérique SPI, doit être cohérent "
"avec le nom de la structure spi_device_id dans le pilote du capteur.\n"
"   *     .bus_num = xx, // adresse du bus SPI\n"
"   *}\n"
"   */\n"
"  sensor[1].name[0]=0; // pas d'autre capteur\n"
"  ret = IMP_ISP_AddSensor (& sensor); \n"
"  if (ret <0) {\n"
"    printf (\"Impossible d'enregistrer le capteur \\n\");\n"
"    return -1;\n"
"  }\n"

#. type: Bullet: '* '
#: ./imp_isp-programigo_gvidilo.md:46
#, markdown-text, no-wrap
#, fuzzy
msgid "Paŝo 3: Aktivigu la sensilon, ĝi komencos produkti bildojn.\n"
msgstr "Langkah 3: Aktifkan sensor, ia akan mula menghasilkan gambar.\n"

#. type: Fenced code block
#: ./imp_isp-programigo_gvidilo.md:48
#, no-wrap
msgid ""
"  ret = IMP_ISP_EnableSensor (void);\n"
"  if (ret <0) {\n"
"  printf (\"Impossible d'activer le capteur \\n\");\n"
"  return -1;\n"
" }\n"
msgstr ""
"  ret = IMP_ISP_EnableSensor (void);\n"
"  if (ret <0) {\n"
"  printf (\"Impossible d'activer le capteur \\n\");\n"
"  return -1;\n"
" }\n"

#. type: Bullet: '* '
#: ./imp_isp-programigo_gvidilo.md:56
#, markdown-text, no-wrap
#, fuzzy
msgid "paŝo 4: Aktivigu la agordojn:\n"
msgstr "Langkah 4: Aktifkan tetapan:\n"

#. type: Fenced code block
#: ./imp_isp-programigo_gvidilo.md:58
#, no-wrap
msgid ""
"  ret = IMP_ISP_EnableTuning (); \n"
"  if (ret <0) {\n"
"  printf (\"Impossible d'activer le réglage \\n\");\n"
"  return -1;\n"
" }\n"
msgstr ""
"  ret = IMP_ISP_EnableTuning (); \n"
"  if (ret <0) {\n"
"  printf (\"Impossible d'activer le réglage \\n\");\n"
"  return -1;\n"
" }\n"

#. type: Bullet: '* '
#: ./imp_isp-programigo_gvidilo.md:66
#, markdown-text, no-wrap
#, fuzzy
msgid ""
"Paŝo 5: Alvoki ISP-elpurigan interfacon: Bonvolu raporti al la dokumentado "
"de ISP-elpuriga interfaco.\n"
msgstr "Langkah 5: Memohon antaramuka debug ISP: Sila rujuk dokumentasi antara muka debug ISP.\n"

#. type: Title ##
#: ./imp_isp-programigo_gvidilo.md:69
#, markdown-text, no-wrap
#, fuzzy
msgid "Senaktivigo de ISP-modulo"
msgstr "Melumpuhkan modul ISP"

#. type: Plain text
#: ./imp_isp-programigo_gvidilo.md:73
#, markdown-text, no-wrap
#, fuzzy
msgid ""
"La paŝoj por malinstali la ISP-modulon estas jenaj:\n"
"* paŝo 1: Malŝalti la ISP-agordon\n"
msgstr "Langkah-langkah untuk menyahpasang modul ISP adalah seperti berikut:\n* langkah 1: Lumpuhkan konfigurasi ISP\n"

#. type: Fenced code block
#: ./imp_isp-programigo_gvidilo.md:74
#, no-wrap
msgid ""
"int ret = 0;\n"
"  IMPSensorInfo sensor[2];\n"
"  sensor[0].name = \"xxx\";\n"
"  sensor[1].name[0] = 0;\n"
"  ret = IMP_ISP_DisableTuning ();\n"
"  if (ret <0) {\n"
"  printf (\"Impossible de désactiver le réglage \\n\");\n"
"  return -1;\n"
" }\n"
msgstr ""
"int ret = 0;\n"
"  IMPSensorInfo sensor[2];\n"
"  sensor[0].name = \"xxx\";\n"
"  sensor[1].name[0] = 0;\n"
"  ret = IMP_ISP_DisableTuning ();\n"
"  if (ret <0) {\n"
"  printf (\"Impossible de désactiver le réglage \\n\");\n"
"  return -1;\n"
" }\n"

#. type: Bullet: '* '
#: ./imp_isp-programigo_gvidilo.md:86
#, markdown-text, no-wrap
#, fuzzy
msgid ""
"2a paŝo: fermu la sensilojn. (FrameSource devas esti fermita antaŭ ĉi tiu "
"operacio)\n"
msgstr "Langkah 2: Tutup sensor. (FrameSource mesti ditutup sebelum operasi ini)\n"

#. type: Fenced code block
#: ./imp_isp-programigo_gvidilo.md:88
#, no-wrap
msgid ""
"ret = IMP_ISP_DisableSensor (); \n"
"  if (ret <0) {\n"
"  printf (\"Impossible de désactiver le capteur \\n\");\n"
"  return -1;\n"
" }\n"
msgstr ""
"ret = IMP_ISP_DisableSensor (); \n"
"  if (ret <0) {\n"
"  printf (\"Impossible de désactiver le capteur \\n\");\n"
"  return -1;\n"
" }\n"

#. type: Bullet: '* '
#: ./imp_isp-programigo_gvidilo.md:97
#, markdown-text, no-wrap
#, fuzzy
msgid ""
"3a paŝo: forigu la sensilojn, la sensiloj devas esti fermitaj antaŭ ĉi tiu "
"operacio.\n"
msgstr "Langkah 3: keluarkan sensor, sensor mesti ditutup sebelum operasi ini.\n"

#. type: Fenced code block
#: ./imp_isp-programigo_gvidilo.md:99
#, no-wrap
msgid ""
"ret = IMP_ISP_DelSensor (& sensor); \n"
"  if (ret <0) {\n"
"  printf (\"Impossible de désactiver le capteur \\n\");\n"
"  return -1;\n"
" }\n"
msgstr ""
"ret = IMP_ISP_DelSensor (& sensor); \n"
"  if (ret <0) {\n"
"  printf (\"Impossible de désactiver le capteur \\n\");\n"
"  return -1;\n"
" }\n"

#. type: Bullet: '* '
#: ./imp_isp-programigo_gvidilo.md:107
#, markdown-text, no-wrap
#, fuzzy
msgid ""
"Paŝo 4: Purigu la ISP-modulon, ĉiuj sensiloj devas esti forigitaj antaŭ ĉi "
"tiu operacio.\n"
msgstr "Langkah 4: Bersihkan modul ISP, semua sensor mesti dikeluarkan sebelum operasi ini.\n"

#. type: Fenced code block
#: ./imp_isp-programigo_gvidilo.md:109
#, no-wrap
msgid ""
"ret = IMP_ISP_Close ();\n"
"  if (ret <0) {\n"
"  printf (\"Impossible de désactiver le capteur \\n\");\n"
"  return -1;\n"
" }\n"
msgstr ""
"ret = IMP_ISP_Close ();\n"
"  if (ret <0) {\n"
"  printf (\"Impossible de désactiver le capteur \\n\");\n"
"  return -1;\n"
" }\n"

#. type: Title ##
#: ./imp_isp-programigo_gvidilo.md:119
#, markdown-text, no-wrap
#, fuzzy
msgid "listo de funkcioj"
msgstr "senarai fungsi"

#. type: Plain text
#: ./imp_isp-programigo_gvidilo.md:193
#, markdown-text, no-wrap
#, fuzzy
msgid ""
"int IMP_ISP_Malferma(malplena);\n"
"int IMP_ISP_Fermi(malplenan);\n"
"int IMP_ISP_AddSensor(IMPSensorInfo *pinfo);\n"
"int IMP_ISP_DelSensor(IMPSensorInfo *pinfo);\n"
"int IMP_ISP_EnableSensor(malplena);\n"
"int IMP_ISP_DisableSensor(malplena);\n"
"int IMP_ISP_SetSensorRegister(uint32_t reg, uint32_t valoro);\n"
"int IMP_ISP_GetSensorRegister(uint32_t reg, uint32_t *valoro);\n"
"int IMP_ISP_EnableTuning(malplena);\n"
"int IMP_ISP_DisableTuning(malplena);\n"
"int IMP_ISP_Agordo_SetSensorFPS(uint32_t fps_num, uint32_t fps_den);\n"
"int IMP_ISP_Tuning_GetSensorFPS(uint32_t *fps_num, uint32_t *fps_den);\n"
"int IMP_ISP_Agordo_SetAntiFlickerAttr(IMPISPAntiflickerAttr attr);\n"
"int IMP_ISP_Tuning_GetAntiFlickerAttr(IMPISPAntiflickerAttr *pattr);\n"
"int IMP_ISP_Agordo_SetRawDRC(IMPISPDrcAttr *pinfo);\n"
"int IMP_ISP_Tuning_GetRawDRC(IMPISPDrcAttr *pinfo);\n"
"int IMP_ISP_Agordo_SetSinterDnsAttr(IMPISPSinterDenoiseAttr *pinfo);\n"
"int IMP_ISP_Tuning_GetSinterDnsAttr(IMPISPSinterDenoiseAttr *pinfo);\n"
"int IMP_ISP_Agordo_SetTemperDnsCtl(IMPISPTemperDenoiseAttr *pinfo);\n"
"int IMP_ISP_Tuning_SetTemperDnsAttr(IMPISPTemperDenoiseAttr *pinfo);\n"
"int IMP_ISP_Agordo_GetTemperDnsAttr(IMPISPTemperDenoiseAttr *pinfo);\n"
"int IMP_ISP_Tuning_SetWDRAttr(IMPISPTuningOpsMode mode);\n"
"int IMP_ISP_Agordo_GetWDRAttr(IMPISPTuningOpsMode *pmode);\n"
"int IMP_ISP_Tuning_SetSceneMode(IMPISPSceneMode mode);\n"
"int IMP_ISP_Agordo_GetSceneMode(IMPISPSceneMode *pmode);\n"
"int IMP_ISP_Tuning_SetColorfxMode(IMPISPColorfxMode mode);\n"
"int IMP_ISP_Agordo_GetColorfxMode(IMPISPColorfxMode *pmode);\n"
"int IMP_ISP_Tuning_Agordu Brilecon(sennoma signo brila);\n"
"int IMP_ISP_Agordo_GetBrightness(unsigned char *pbright);\n"
"int IMP_ISP_Tuning_SetContrast(sennoma signokontrasto);\n"
"int IMP_ISP_Agordo_GetContrast(unsigned char *pcontrast);\n"
"int IMP_ISP_Tuning_SetSharpness(sennoma akra akreco);\n"
"int IMP_ISP_Agordo_GetSharpness(unsigned char *psharpness);\n"
"int IMP_ISP_Tuning_SetSaturation(sennoma signo (sat 22 °);\n"
"int IMP_ISP_Agordo_GetSaturation(unsigned char *psat);\n"
"int IMP_ISP_Tuning_SetISPProcess(IMPISPTuningOpsMode mode);\n"
"int IMP_ISP_Agordo_SetFWFreeze(IMPISPTuningOpsMode mode);\n"
"int IMP_ISP_Tuning_SaveAllParam(char *vojo);\n"
"int IMP_ISP_Agordo_SetISPBypass(IMPISPTuningOpsMode enable);\n"
"int IMP_ISP_Tuning_GetTotalGain(uint32_t *gain);\n"
"int IMP_ISP_Tuning_Agordu ISPHflip(IMPISPTuningOpsMode mode);\n"
"int IMP_ISP_Agordo_GetISPHflip(IMPISPTuningOpsMode *pmode);\n"
"int IMP_ISP_Tuning_SetISPVflip(IMPISPTuningOpsMode mode);\n"
"int IMP_ISP_Agordo_GetISPVflip(IMPISPTuningOpsMode *pmode);\n"
"int IMP_ISP_Tuning_SetISPRunningMode(IMPISPRunningMode mode);\n"
"int IMP_ISP_Agordo_GetISPRunningMode(IMPISPRunningMode *pmode);\n"
"int IMP_ISP_Tuning_SetAeStrategy(IMPISPAeStrategy-strategio);\n"
"int IMP_ISP_Agordo_GetAeStrategy(IMPISPAeStrategy *pstrategy);\n"
"int IMP_ISP_Tuning_SetGamma(IMPISPGamma *gama);\n"
"int IMP_ISP_Agordo_GetGamma(IMPISPGamma *gamma);\n"
"int IMP_ISP_Tuning_SetAeComp(int comp);\n"
"int IMP_ISP_Agordo_GetAeComp(int *comp);\n"
"int IMP_ISP_Tuning_SetExpr(IMPISPExpr *ekspr);\n"
"int IMP_ISP_Agordo_GetExpr(IMPISPExpr *expr);\n"
"int IMP_ISP_Tuning_AE_GetROI(IMPISPAERoi *isp_ae_roi);\n"
"int IMP_ISP_Tuning_AE_SetROI(IMPISPAERoi *isp_ae_roi);\n"
"int IMP_ISP_Tuning_SetWB(IMPISPWB *wb);\n"
"int IMP_ISP_Agordo_GetWB(IMPISPWB *wb);\n"
"int IMP_ISP_Tuning_GetWB_Statis(IMPISPWB *wb);\n"
"int IMP_ISP_Tuning_Awb_GetCwfShift(IMPISPWB *isp_wb_attr);\n"
"int IMP_ISP_Tuning_Awb_SetCwfShift(IMPISPWB *isp_wb_attr);\n"
"int IMP_ISP_Tuning_SetMaxAgain(uint32_t gain);\n"
"int IMP_ISP_Tuning_GetMaxAgain(uint32_t *gain);\n"
"int IMP_ISP_Tuning_SetMaxDgain(uint32_t gain);\n"
"int IMP_ISP_Tuning_GetMaxDgain(uint32_t *gain);\n"
"int IMP_ISP_Tuning_SetVideoDrop(malplena (*cb)(malplena));\n"
"int IMP_ISP_Agordo_SetHiLightDepress(uint32_t forto);\n"
"int IMP_ISP_Agordo_SetTemperStrength(uint32_t-proporcio);\n"
"int IMP_ISP_Agordo_SetSinterStrength(uint32_t-proporcio);\n"
"int IMP_ISP_Agordo_SetDPStrength(uint32_t-proporcio);\n"
"int IMP_ISP_Agordo_SetAntiFogAttr(IMPISPAntiFogAttr attr);\n"
"int IMP_ISP_Tuning_GetEVAttr(IMPISPEVAttr *attr);\n"
msgstr "int IMP_ISP_Terbuka(kosong);\nint IMP_ISP_Tutup(kosong);\nint IMP_ISP_AddSensor(IMPSensorInfo *pinfo);\nint IMP_ISP_DelSensor(IMPSensorInfo *pinfo);\nint IMP_ISP_EnableSensor(kosong);\nint IMP_ISP_DisableSensor(kosong);\nint IMP_ISP_SetSensorRegister(uint32_t reg, uint32_t value);\nint IMP_ISP_GetSensorRegister(uint32_t reg, uint32_t *nilai);\nint IMP_ISP_EnableTuning(blank);\nint IMP_ISP_DisableTuning(kosong);\nint IMP_ISP_Konfigurasi_SetSensorFPS(uint32_t fps_num, uint32_t fps_den);\nint IMP_ISP_Tuning_GetSensorFPS(uint32_t *fps_num, uint32_t *fps_den);\nint IMP_ISP_Konfigurasi_SetAntiFlickerAttr(IMPISPAntiflickerAttr attr);\nint IMP_ISP_Tuning_GetAntiFlickerAttr(IMPISPAntiflickerAttr *pattr);\nint IMP_ISP_Konfigurasi_SetRawDRC(IMPISPDrcAttr *pinfo);\nint IMP_ISP_Tuning_GetRawDRC(IMPISPDrcAttr *pinfo);\nint IMP_ISP_Konfigurasi_SetSinterDnsAttr(IMPISPSinterDenoiseAttr *pinfo);\nint IMP_ISP_Tuning_GetSinterDnsAttr(IMPISPSinterDenoiseAttr *pinfo);\nint IMP_ISP_Konfigurasi_SetTemperDnsCtl(IMPISPTemperDenoiseAttr *pinfo);\nint IMP_ISP_Tuning_SetTemperDnsAttr(IMPISPTemperDenoiseAttr *pinfo);\nint IMP_ISP_Konfigurasi_GetTemperDnsAttr(IMPISPTemperDenoiseAttr *pinfo);\nint IMP_ISP_Tuning_SetWDRAttr(Mod IMPISPTuningOpsMode);\nint IMP_ISP_Setting_GetWDRAttr(IMPISPTuningOpsMode *pmode);\nint IMP_ISP_Tuning_SetSceneMode(Mode IMPISPSceneMode);\nint IMP_ISP_Pengaturan_GetSceneMode(IMPISPSceneMode *pmode);\nint IMP_ISP_Tuning_SetColorfxMode(mod IMPISPColorfxMode);\nint IMP_ISP_Tetapan_GetColorfxMode(IMPISPColorfxMode *pmode);\nint IMP_ISP_Tuning_Tetapkan Kecerahan(tanda tidak bernama terang);\nint IMP_ISP_Konfigurasi_GetBrightness(unsigned char *pbright);\nint IMP_ISP_Tuning_SetContrast(kontras watak tanpa nama);\nint IMP_ISP_Konfigurasi_GetContrast(unsigned char *pcontrast);\nint IMP_ISP_Tuning_SetSharpness(ketajaman ketajaman tanpa nama);\nint IMP_ISP_Konfigurasi_GetSharpness(unsigned char *psharpness);\nint IMP_ISP_Tuning_Set Ketepuan(tanda tanpa nama (hingga 22 °);\nint IMP_ISP_Konfigurasi_GetSaturation(unsigned char *psat);\nint IMP_ISP_Tuning_SetISPProcess(IMPISPTuningOpsMode mode);\nint IMP_ISP_Configuration_SetFWFreeze(IMPISPTuningOpsMode mode);\nint IMP_ISP_Tuning_SaveAllParam(char *path);\nint IMP_ISP_Persediaan_SetISPBypass(IMPISPTuningOpsMode enable);\nint IMP_ISP_Tuning_GetTotalGain(uint32_t *gain);\nint IMP_ISP_Tuning_Tetapkan ISPHflip(IMPISPTuningOpsMode mod);\nint IMP_ISP_Konfigurasi_GetISPHflip(IMPISPTuningOpsMode *pmode);\nint IMP_ISP_Tuning_SetISPV Flip(mod IMPISPTuningOpsMode);\nint IMP_ISP_Konfigurasi_GetISPVflip(IMPISPTuningOpsMode *pmode);\nint IMP_ISP_Tuning_SetISPRunningMode(Mod IMPISPRunningMode);\nint IMP_ISP_Konfigurasi_GetISPRunningMode(IMPISPRunningMode *pmode);\nint IMP_ISP_Tuning_SetAeStrategi(Strategi IMPISPAeStrategi);\nint IMP_ISP_Konfigurasi_GetAeStrategy(IMPISPAeStrategy *pstrategy);\nint IMP_ISP_Tuning_SetGamma(IMPISPGamma *range);\nint IMP_ISP_Konfigurasi_GetGamma(IMPISPGamma *gamma);\nint IMP_ISP_Tuning_SetAeComp(int comp);\nint IMP_ISP_Konfigurasi_GetAeComp(int *comp);\nint IMP_ISP_Tuning_SetExpr(IMPISPExpr *ekspr);\nint IMP_ISP_Konfigurasi_GetExpr(IMPISPExpr *expr);\nint IMP_ISP_Tuning_AE_GetROI(IMPISPAERoi *isp_ae_roi);\nint IMP_ISP_Tuning_AE_SetROI(IMPISPAERoi *isp_ae_roi);\nint IMP_ISP_Tuning_SetWB(IMPISPWB *wb);\nint IMP_ISP_Konfigurasi_GetWB(IMPISPWB *wb);\nint IMP_ISP_Tuning_GetWB_Statis(IMPISPWB *wb);\nint IMP_ISP_Tuning_Awb_GetCwfShift(IMPISPWB *isp_wb_attr);\nint IMP_ISP_Tuning_Awb_SetCwfShift(IMPISPWB *isp_wb_attr);\nint IMP_ISP_Tuning_SetMaxAgain(uint32_t gain);\nint IMP_ISP_Tuning_GetMaxAgain(uint32_t *gain);\nint IMP_) °) ISP_Tuning_SetMaxDgain(uint32_t gain);\nint IMP_ISP_Tuning_GetMaxDgain(uint32_t *gain);\nint IMP_ISP_Tuning_SetVideoDrop() kosong (*cb)(kosong));\nint IMP_ISP_Konfigurasi_SetHiLightDepress(uint32_daya t);\nint IMP_ISP_Konfigurasi_SetTemperStrength(uint32_nisbah t);\nint IMP_ISP_Konfigurasi_SetSinterStrength(uint32_nisbah t);\nint IMP_ISP_Konfigurasi_SetDPStrength(uint32_nisbah t);\nint IMP_ISP_Konfigurasi_SetAntiFogAttr(IMPISPAntiFogAttr attr);\nint IMP_ISP_Tuning_GetEVAttr(IMPISPEVAttr *attr);\n"

